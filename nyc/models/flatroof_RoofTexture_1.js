// Converted from: ./flatroof_RoofTexture_1.obj
//  vertices: 500
//  faces: 169
//  normals: 0
//  colors: 0
//  uvs: 672
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[1,1,1,0,0,0,0,1,0,0.875,1,0,0.1923,0,0,0.125,0,1,1,0.125,0.8214,0,0,0,0,1,1,1,1,0,0,0,0.9485,0.0357,1,0.1872,0.9939,0.1293,0.9761,0.0772,0.9485,0.0357,1,0.1872,0.9939,0.1293,0.9761,0.0772,0.9485,0.0357,1,0.1872,0.9939,0.1293,0.9761,0.0772,0.9485,0.0357,1,0.1872,0.9939,0.1293,0.9761,0.0772,0.9485,0.0357,1,0.1872,0.9939,0.1293,0.9761,0.0772,0.9491,0.0355,1,0.186,0.9939,0.1283,0.9763,0.0762,0.9545,0.0334,1,0.1751,0.9942,0.1187,0.9776,0.0678,1,0,0,0,0,1,1,1,0.9767,0.0491,1,0.878,1,0.122,0.994,0.0837,0.9858,0.0149,1,0.9171,1,0.0829,0.9979,0.0441,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0.1381,1,1,1,0.8619,0,0,1,1,1,0.9972,0,0,0.00099999,0.0024,0,0,1,0.9976,1,1,0.003,0.9999,1,1,0,0,0.003,0,1,0.9999,1,1,0,0,0.003,0,1,0,0,0,0.9436,1,0.9436,1,0,1,1,1,0.9436,0,0.9436,0,1,0.7842,0.957,0.9616,0.3711,0.2157,0.0168,0.0384,0.6027,0,0.5859,0.0384,0.6027,0.2157,0.0168,0.1774,0,0.0384,0.6027,0.0258,0.6457,0.7717,1,0.7842,0.957,0.7842,0.957,0.8226,0.9767,1,0.3908,0.9616,0.3711,0.0258,0.6457,0.0384,0.6027,0,0.5859,0.003,0.6204,0.8226,0.9767,0.7842,0.957,0.7717,1,0.8022,1,1,0,0,0,0,1,1,1,0,1,1,0.125,0.8214,0,0,0,1,0,0,0.875,0.1786,1,1,1,0,1,1,0.125,0.8214,0,0,0,0,1,1,0.125,0.8214,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0.0011,0.0061,0,0,1,0.9941,1,1,0,0.0051,0,0,1,0.9951,1,0.0003,1,1,1,0.9989,0.00089997,0,0,0.0003,1,1,1,0.999,0,0,0,0.0003,1,1,1,0.999,0,0,0,0.0003,1,1,1,0.999,0,0,0,0.2403,0,1,1,1,0.343,0.7597,0,0,1,0.7597,0,0.2403,0,0,0.3387,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,0.9597,0.0393,0.0403,0.0393,0.0403,0.9587,0.9597,0.9587,1,1,0.9597,0.9587,0.0403,0.9587,0,1,0.9597,0.9587,1,1,1,0,0.9597,0.0393,0.9597,0.0393,1,0,0,0,0.0403,0.0393,0,1,0.0403,0.9587,0.0403,0.0393,0,0,0.9533,0.1972,0.9381,0,0,0.1972,0.9533,0.1972,0,0.1972,0.0619,1,0.9827,0.5777,0.0619,1,1,0.8028,0.9827,0.5777,0.344,0.3202,1,1,1,0,0.344,0,0.344,0.3202,1,1,1,0,0.344,0,1,0.8761,0,1,1,1,0.1705,0.6781,1,0.8761,1,0.1414,0.344,0.3202,0.1705,0.3202,0.1705,0.6781,0.344,0.3202,1,0,0.344,0,0.344,0.3202,1,0.1414,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,0.0355,0.015,0,0,1,0.9852,1,0.0116,1,1,1,0.988,0,0,0,0.0116,1,1,1,0.988,0,0,0,0.0116,1,1,1,0.988,0,0,0,0.0116,1,1,1,0.988,0,0,0,0.0116,1,1,1,0.988,0,0,0,0.0116,1,1,1,0.988,0,0,0,0.1705,0.6781,0,0.6781,0,1,1,0.8761,0.1705,0.6781,0,0.6781,0,1,1,1,0.1705,0.6781,1,1,0.344,0.3202,0.1705,0.3202,0.1705,0.6781,0,0.6781,0,1,1,1,0.1705,0.6781,1,1,0.344,0.3202,0.1706,0.3202,1,0.3387,0.7597,0,0,1,1,1,0,1,1,1,0.2403,0,0,0.343,0,1,0.8214,1,1,0.875,1,0.125,0,1,0.8214,1,1,0.875,1,0.125,1,0,0.1786,0,0,0.125,0,0.875,0,1,0.8214,1,1,0.875,1,0.125,0,0.0829,0,0.9171,0.0021,0.9559,0.0021,0.0441,0.0021,0.0441,0.0021,0.9559,0.0142,0.9851,0.0142,0.0149,0.0142,0.0149,0.0142,0.9851,0.0149,0.9858,0.0149,0.0142,0.0149,0.0142,0.0149,0.9858,0.0441,0.9979,0.0441,0.0021,0.0441,0.0021,0.0441,0.9979,0.0829,1,0.0829,0,0.0829,0,0.0829,1,0.9171,1,0.9559,0.9979,0.0829,0,0.9559,0.9979,0.9851,0.9858,0.9171,0,0.9171,0,0.9851,0.9858,0.9858,0.9851,0.9559,0.0021,0.9559,0.0021,0.9858,0.9851,0.9979,0.9559,0.9851,0.0142,0.9851,0.0142,0.9979,0.9559,1,0.9171,0.9858,0.0149,0,0.122,0,0.878,0.006,0.9163,0.006,0.0837,0.006,0.0837,0.006,0.9163,0.0233,0.9509,0.0233,0.0491,0.0233,0.0491,0.0233,0.9509,0.0491,0.9767,0.0491,0.0233,0.0491,0.0233,0.0491,0.9767,0.0837,0.994,0.0837,0.006,0.0837,0.006,0.0837,0.994,0.122,1,0.122,0,0.122,0,0.122,1,0.878,1,0.9163,0.994,0.122,0,0.9163,0.994,0.9509,0.9767,0.878,0,0.878,0,0.9509,0.9767,0.9767,0.9509,0.9163,0.006,0.9163,0.006,0.9767,0.9509,0.994,0.9163,0.9509,0.0233,0.9509,0.0233,0.994,0.9163,1,0.878,0.9767,0.0491,1,1,1,0.1751,0.9545,0.0334,0.9204,0.0086,1,1,0.9204,0.0086,0.8825,0,0,1,0,1,0.8825,0,0.1175,0,0,0.1751,0,0.1751,0.1175,0,0.0796,0.0086,0.0058,0.1187,0.0058,0.1187,0.0796,0.0086,0.0455,0.0334,0.0224,0.0678,1,1,1,0.186,0.9491,0.0355,0.9143,0.0091,1,1,0.9143,0.0091,0.8757,0,0,1,0,1,0.8757,0,0.1243,0,0,0.186,0,0.186,0.1243,0,0.0857,0.0091,0.0061,0.1283,0.0061,0.1283,0.0857,0.0091,0.0509,0.0355,0.0237,0.0762,1,1,1,0.1872,0.9485,0.0357,0.9136,0.0092,1,1,0.9136,0.0092,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1872,0,0.1872,0.125,0,0.0864,0.0092,0.0061,0.1293,0.0061,0.1293,0.0864,0.0092,0.0515,0.0357,0.0239,0.0772,1,1,1,0.1872,0.9485,0.0357,0.9136,0.0092,1,1,0.9136,0.0092,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1872,0,0.1872,0.125,0,0.0864,0.0092,0.0061,0.1293,0.0061,0.1293,0.0864,0.0092,0.0515,0.0357,0.0239,0.0772,1,1,1,0.1872,0.9485,0.0357,0.9136,0.0092,1,1,0.9136,0.0092,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1872,0,0.1872,0.125,0,0.0864,0.0092,0.0061,0.1293,0.0061,0.1293,0.0864,0.0092,0.0515,0.0357,0.0239,0.0772,1,1,1,0.1872,0.9485,0.0357,0.9136,0.0092,1,1,0.9136,0.0092,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1872,0,0.1872,0.125,0,0.0864,0.0092,0.0061,0.1293,0.0061,0.1293,0.0864,0.0092,0.0515,0.0357,0.0239,0.0772,1,1,1,0.1872,0.9485,0.0357,0.9136,0.0092,1,1,0.9136,0.0092,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1872,0,0.1872,0.125,0,0.0864,0.0092,0.0061,0.1293,0.0061,0.1293,0.0864,0.0092,0.0515,0.0357,0.0239,0.0772,0.8214,1,1,0.875,1,0.125,0,1,1,1,1,0,0,0.875,0.1923,1]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_1.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1500;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.90941715234;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1682;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
