// Converted from: ./flatroof_RoofTexture_15.obj
//  vertices: 366
//  faces: 148
//  normals: 0
//  colors: 0
//  uvs: 570
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0,1,0.8956,1,1,0.4343,0.1855,0,0,1,1,0.0515,0.9202,0,0.1531,0,0,1,1,0.0515,0.9202,0,0.1531,0,0,1,0.9122,1,1,0.5358,0.1909,0,0,1,1,0.044,0.9426,0,0.1647,0,0.842,0,0,0.8745,0.0199,1,1,1,0,1,1,0.4296,0.6265,0,0.1208,0,0,1,1,0.4296,0.6265,0,0.1208,0,0,1,1,0.4296,0.6265,0,0.1208,0,0,1,1,0.4296,0.6265,0,0.1208,0,0,1,1,0.4296,0.6265,0,0.1208,0,0,1,1,0.4296,0.6265,0,0.1208,0,0.0375,0.317,0.2353,0.9654,0.9626,0.6805,0.7648,0.0321,0.8022,0.0187,0.7648,0.0321,0.9626,0.6805,1,0.6671,0.7648,0.0321,0.7546,0,0.0273,0.2848,0.0375,0.317,0.0375,0.317,0,0.3329,0.1978,0.9813,0.2353,0.9654,0.9727,0.7152,0.9626,0.6805,0.2353,0.9654,0.2454,1,0.7546,0,0.7648,0.0321,0.8022,0.0187,0.7837,0.00010002,0,0.3329,0.0375,0.317,0.0273,0.2848,0.0044,0.3053,1,0.6671,0.9626,0.6805,0.9727,0.7152,0.9956,0.6948,0.2454,1,0.2353,0.9654,0.1978,0.9813,0.2163,1,0,1,0.9921,1,1,0.0449,0.0156,0,0,1,0.9927,1,1,0,0.0139,0,0,1,0.9927,1,1,0,0.0139,0,1,0,0.0733,0.6684,0,1,0.779,1,1,0.0915,0,0.0915,0,1,1,1,1,0.3656,0,0.3656,0,1,1,1,1,0.457,0,0.457,0,1,1,1,0.8157,1,0,0.7307,0.1843,1,0.1125,0.807,0,0.4342,0.0046,0.5658,0.043,0.693,0.9997,0,0.0004,0.0014,0,1,1,1,1,0,0.0008,0,0,1,0.9999,1,1,0,0.0008,0,0,1,0.9999,1,1,0,0.0008,0,0,1,0.9999,1,0.9962,0,0,0.0043,0.0008,1,1,1,1,1,0,0.5167,0.0953,1,0.9458,0.6075,0.138,1,1,1,0.933,0.3571,0.983,0.8992,1,0.7143,0.983,0.5294,0.0968,0.746,0,0.4285,0.0325,0.5959,0.933,0.3571,1,0.7143,0.983,0.5294,0.933,0.3261,1,0.6522,0.983,0.4834,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,0.0015,0.0015,0,0,1,0.9986,1,1,0,0.0012,0,0,1,0.9989,1,0,0.3562,1,0.3562,0.7597,0,0.2403,0,0,0.6734,1,0.6734,1,0,0,0,0.067,0.3335,0.25,0.0894,0.1464,0.1953,0.0008,0.2487,0.0333,0.0241,0,0.1251,0.983,0.553,0.983,0.9391,1,0.746,0.983,0.553,0.983,0.9391,1,0.746,0.983,0.553,0.983,0.9391,1,0.746,0.0002,0.0007,0,1,1,1,0.9998,0,0.0525,1,1,1,0.9227,0,0,0.2873,0.061,1,1,1,0.9359,0,0,0,0.017,0.9391,0.0339,1,0.017,0.553,0,0.746,0.017,0.553,0.0339,1,0.9661,1,0.067,0.373,0.067,0.373,0.9661,1,0.25,0.1,0.1464,0.2185,0.25,0.1,0.9661,1,0.5,0,0.3706,0.0254,0.5,0,0.9661,1,0.75,0.1,0.6294,0.0254,0.75,0.1,0.9661,1,0.933,0.373,0.8536,0.2185,0.933,0.373,0.9661,1,0.983,0.9391,0.983,0.553,0.017,0.9391,0.0339,1,0.017,0.553,0,0.746,0.017,0.553,0.0339,1,0.9661,1,0.067,0.373,0.067,0.373,0.9661,1,0.25,0.1,0.1464,0.2185,0.25,0.1,0.9661,1,0.5,0,0.3706,0.0254,0.5,0,0.9661,1,0.75,0.1,0.6294,0.0254,0.75,0.1,0.9661,1,0.933,0.373,0.8536,0.2185,0.933,0.373,0.9661,1,0.983,0.9391,0.983,0.553,0.017,0.9391,0.0339,1,0.017,0.553,0,0.746,0.017,0.553,0.0339,1,0.9661,1,0.067,0.373,0.067,0.373,0.9661,1,0.25,0.1,0.1464,0.2185,0.25,0.1,0.9661,1,0.5,0,0.3706,0.0254,0.5,0,0.9661,1,0.75,0.1,0.6294,0.0254,0.75,0.1,0.9661,1,0.933,0.373,0.8536,0.2185,0.933,0.373,0.9661,1,0.983,0.9391,0.983,0.553,0.9992,0.6672,0.9874,0.6205,0.9667,0.8917,1,0.7908,0.9667,0.8917,0.9874,0.6205,0.0553,0,0.9017,0.9631,0.9017,0.9631,0.0553,0,0.6957,1,0.8092,1,0.6957,1,0.0553,0,0.4373,0.8917,0.5688,0.9631,0.4373,0.8917,0.0553,0,0.1957,0.6671,0.31,0.7908,0.1957,0.6671,0.0553,0,0.0356,0.3865,0.1021,0.5293,0.0356,0.3865,0.0553,0,0.0333,0.0241,0.0008,0.2487,0.983,0.4943,0.933,0.3335,0.983,0.8395,1,0.6669,0.983,0.8395,0.933,0.3335,0.8536,0.1953,0.9331,1,0.9331,1,0.8536,0.1953,0.75,0.0894,0.0669,1,0.0669,1,0.75,0.0894,0.6294,0.0227,0.017,0.8395,0.017,0.8395,0.6294,0.0227,0.5,0,0,0.6669,0,0.6669,0.5,0,0.3706,0.0227,0.017,0.4943,0.017,0.4943,0.3706,0.0227,0.25,0.0894,0.067,0.3335,0,0.6734,0.2403,1,0.7597,1,1,0.6734,0,1,1,1,1,0.3562,0,0.3562,0.067,0.9783,0.0798,1,0,0.6522,0.017,0.821,0,0.6522,0.0798,1,0.9202,1,0.017,0.4834,0.017,0.4834,0.9202,1,0.1464,0.191,0.067,0.3261,0.1464,0.191,0.9202,1,0.3706,0.0222,0.25,0.0874,0.3706,0.0222,0.9202,1,0.6294,0.0222,0.5,0,0.6294,0.0222,0.9202,1,0.933,0.9783,0.75,0.0874,0.75,0.0874,0.933,0.9783,0.983,0.821,0.8536,0.191,0.8536,0.191,0.983,0.821,1,0.6522,0.933,0.3261,0.017,0.8992,0.0463,1,0.9537,1,0,0.7143,0,0.7143,0.9537,1,0.067,0.3571,0.017,0.5294,0.067,0.3571,0.9537,1,0.25,0.0957,0.1464,0.2092,0.25,0.0957,0.9537,1,0.5,0,0.3706,0.0243,0.5,0,0.9537,1,0.75,0.0957,0.6294,0.0243,0.75,0.0957,0.9537,1,0.983,0.8992,0.8536,0.2092,0.8536,0.2092,0.983,0.8992,1,0.7143,0.933,0.3571,0.9675,0.0878,0.9299,0,0.0224,0.1572,1,0.2552,1,0.2552,0.0224,0.1572,0.9628,0.5959,0.9984,0.4285,0.9628,0.5959,0.0224,0.1572,0.8017,0.8685,0.8957,0.746,0.8017,0.8685,0.0224,0.1572,0.5597,1,0.687,0.9551,0.5597,1,0.0224,0.1572,0.3017,0.9551,0.4282,1,0.3017,0.9551,0.0224,0.1572,0.0016,0.2552,0.1886,0.8685,0.1886,0.8685,0.0016,0.2552,0,0.4285,0.0968,0.746,0.933,0.3571,0.8536,0.2092,0.9537,1,0.983,0.8992,0.9537,1,0.8536,0.2092,0.75,0.0957,0.0463,1,0.0463,1,0.75,0.0957,0.6294,0.0243,0.017,0.8992,0.017,0.8992,0.6294,0.0243,0.5,0,0,0.7143,0,0.7143,0.5,0,0.3706,0.0243,0.017,0.5294,0.017,0.5294,0.3706,0.0243,0.25,0.0957,0.067,0.3571,0.067,0.3571,0.25,0.0957,0.1464,0.2092,0,0,0.138,1,0.9458,0.6075,0.3383,0,0.8029,0.00010002,0.3657,0,0,0.5167,1,1,0.9954,0.4342,0.957,0.307,0.8875,0.193,1,0.5658,1,0.5658,0.8875,0.193,0.7916,0.0999,0.9705,0.693,0.9705,0.693,0.7916,0.0999,0.6758,0.0341,0.909,0.807,0.909,0.807,0.6758,0.0341,0.548,0,0.8196,0.9001,0.8196,0.9001,0.548,0,0.417,0,0.7084,0.9659,0.7084,0.9659,0.417,0,0.2916,0.0341,0.583,1,0.583,1,0.2916,0.0341,0.1804,0.0999,0.452,1,0.452,1,0.1804,0.0999,0.091,0.193,0.3242,0.9659,0.3242,0.9659,0.091,0.193,0.0295,0.307,0.2084,0.9001,0.2084,0.9001,0.0295,0.307,0,0.4342,0.1125,0.807,1,0.7307,0.5,0,0,0.7307,0.8157,1,0.6873,0,0.3127,0,0,0.457,1,0.457,0.7497,0,0.2503,0,0,0.3656,1,0.3656,0.9374,0,0.0626,0,0,0.0915,1,0.0915,1,0,0.7417,0,0.0733,0.6684,0,1,0.9312,1,1,0.4296,0,1,0.9312,1,1,0.4296,0,1,0.9312,1,1,0.4296,0,1,0.9312,1,1,0.4296,0,1,0.9312,1,1,0.4296,0,1,0.9312,1,1,0.4296,0,1,0.844,1,1,0.044,0,1,0.8555,1,1,0.0515,0,1,0.8555,1,1,0.0515]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_15.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1098;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.95129394531;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1436;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
