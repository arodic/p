// Converted from: ./flatroof_RoofTexture_7.obj
//  vertices: 283
//  faces: 104
//  normals: 0
//  colors: 0
//  uvs: 405
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0.721,0.0533,1,0,0.914,0.0082,0.1285,0.4912,1,0,0.2746,0,0.1285,0.4912,1,0,0.2746,0,0.1285,0.4912,1,0,0.2746,0,0.0003,1,1,1,0.9977,0,0,0.00089997,0.0003,1,1,1,0.9977,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0.0061,0.1329,0,0.1923,0,1,0.0087,0.0864,0.1234,0.0061,0.0736,0.0239,0.0341,0.0515,0.0087,0.0864,0.1234,0.0061,0.0736,0.0239,0.0341,0.0515,0.0087,0.0864,0.1234,0.0061,0.0736,0.0239,0.0341,0.0515,0.0087,0.0864,0.1234,0.0061,0.0736,0.0239,0.0341,0.0515,1,1,1,0,0,0,0,1,0,1,0.7479,0,0.2521,0,0,0,0,1,0.2521,0,0,0,0.7826,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,0.6316,0.1208,1,0.8792,1,0.1464,0.2101,0.8536,0.2101,0.5,0,0.1032,0.193,0.4389,0,0.3116,0.0341,0.1971,0.0999,0,0.875,1,0,0.1864,0,0,0.125,0,1,0.875,0,0.125,0,0,0.1886,0,0.2932,1,0.2932,0.7597,0,0.2403,0,1,0.0804,0,0.0804,0,1,1,1,1,0.1503,0,0.1503,0,1,1,1,1,0.1848,0,0.1848,0,1,1,1,1,0.2204,0,0.2204,0,1,1,1,1,0.3497,0,0.3497,0,1,1,1,0,0.00099999,0,1,1,1,0.9927,0,0.9993,1,1,0.00099999,0.0007,0,0,1,0.9985,1,1,0.0032,0.0023,0,0,1,0.9964,0,0,0,0.0009,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0.9992,0.00059998,0.0019,0,0,1,1,1,0.9982,0.00050002,0,0,0.0018,1,0,0.00050002,0.0022,1,1,1,0.9978,0,0,0.00050002,0.0022,1,1,1,0.9978,0,1,0.3497,0.7597,0,0.2403,0,0,0.3497,0.8518,0,0.1482,0,0,0.2204,1,0.2204,0.8765,0,0.1235,0,0,0.1848,1,0.1848,0.9001,0,0.0999,0,0,0.1503,1,0.1503,0.9472,0,0.0528,0,0,0.0804,1,0.0804,0,0.9064,0.0767,1,0.9233,1,1,0.9064,0,0.9064,1,0.9064,1,0.2932,0,0.2932,1,0.1886,0.875,0,0,1,1,1,1,1,1,0,0,0.875,0.1864,1,0.0329,0.693,0.0975,0.807,0.9671,0.307,0.9025,0.193,0.9671,0.307,0.0975,0.807,0.1897,0.9001,1,0.4342,1,0.4342,0.1897,0.9001,0.3029,0.9659,0.9988,0.5658,0.9988,0.5658,0.3029,0.9659,0.4296,1,0.9636,0.693,0.9636,0.693,0.4296,1,0.5611,1,0.8968,0.807,0.8968,0.807,0.5611,1,0.6884,0.9659,0.8029,0.9001,0.0329,0.693,0.9025,0.193,0.8103,0.0999,0,0.5658,0,0.5658,0.8103,0.0999,0.6971,0.0341,0.0012,0.4342,0.0012,0.4342,0.6971,0.0341,0.5704,0,0.0364,0.307,0.0364,0.307,0.5704,0,0.4389,0,0.1032,0.193,0.0817,1,0.9183,1,1,0.7172,0,0.7172,0,0.7172,1,0.7172,0.8536,0.2101,0.1464,0.2101,0.8536,0.185,0.5,0,0.1464,0.185,0,0.6317,0.8536,0.185,0,0.6317,0.1208,1,1,0.6316,0.7826,0,0.2174,0,0,0,0,1,1,0,0.7479,0,0,1,1,1,0,1,0.7479,0,0.2521,0,1,0,0.7479,0,0,1,1,1,1,1,1,0,0,0.875,0.0087,0.9136,1,1,0.0087,0.9136,0.0341,0.9485,0.1786,1,0.1786,1,0.0341,0.9485,0.0736,0.9761,0.1234,0.9939,0,0.875,1,0,0.1786,0,0,0.125,0,0.125,0.1786,0,0.1234,0.0061,0.0087,0.0864,0,0.125,0,0.875,1,0,0.1786,0,1,0,0,0.875,0.0087,0.9136,1,1,1,1,0.0087,0.9136,0.0341,0.9485,0.1786,1,0.1786,1,0.0341,0.9485,0.0736,0.9761,0.1234,0.9939,0,0.125,0.1786,0,0.1234,0.0061,0.0087,0.0864,0,0.125,0,0.875,1,0,0.1786,0,1,0,0,0.875,0.0087,0.9136,1,1,1,1,0.0087,0.9136,0.0341,0.9485,0.1786,1,0.1786,1,0.0341,0.9485,0.0736,0.9761,0.1234,0.9939,0,0.125,0.1786,0,0.1234,0.0061,0.0087,0.0864,0,0.125,0,0.875,1,0,0.1786,0,1,0,0,0.875,0.0087,0.9136,1,1,1,1,0.0087,0.9136,0.0341,0.9485,0.1786,1,0.1786,1,0.0341,0.9485,0.0736,0.9761,0.1234,0.9939,0,0.125,0.1786,0,0.1234,0.0061,0.0087,0.0864,0.875,0,0.125,0,1,1,0.9136,0.0094,0.9136,0.0094,1,1,1,0.1923,0.9485,0.0367,0.9485,0.0367,1,0.1923,0.9939,0.1329,0.9761,0.0793,1,1,0.125,0,0.0864,0.0094,0.0515,0.0367,1,1,0.0515,0.0367,0.0239,0.0793,0.0061,0.1329,0,1,0.8286,1,1,0,0.0122,0.8594,0.0122,0.8594,1,0,0.1285,0.4912,0,1,0.8286,1,1,0,0.0122,0.8594,0.0122,0.8594,1,0,0.1285,0.4912,0,1,0.8286,1,1,0,0.0122,0.8594,0.0122,0.8594,1,0,0.1285,0.4912,0,1,0.8062,1,1,0,0.0416,0.8836,0.0416,0.8836,1,0,0.3451,0.2185,0.2418,0.2884,0.3451,0.2185,1,0,0.721,0.0533,0.5305,0.1216]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_7.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 849;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.980100625;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1018;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
