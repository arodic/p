// Converted from: ./flatroof_RoofTexture_19.obj
//  vertices: 412
//  faces: 138
//  normals: 0
//  colors: 0
//  uvs: 536
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0.2403,0,1,1,1,0.3562,0.7597,0,0.9653,0,0,1,1,1,1,0.0499,0.8647,0,0,1,1,1,1,0.1892,0,1,0.7597,0,0.2403,0,0,0.3266,0.9206,1,0.1464,0.2117,0,0.7229,0.0794,1,0,0.7416,0.5,0,0.1464,0.2172,0.5,0,0.9278,1,1,0.7416,0.8536,0.2172,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0.2403,0,1,1,1,0.3382,0.7597,0,1,1,0.0307,0,0,0.0456,0,1,1,1,0.2403,0,0,0.3381,0,1,0.6572,0.0359,0.0437,0.2601,0.3697,0.9635,0.9832,0.7393,1,0.7758,0.9832,0.7393,0.3697,0.9635,0.3865,1,0.6572,0.0359,0.6404,0,0.0269,0.2242,0.0437,0.2601,0.326,0.9797,0.3697,0.9635,0.0437,0.2601,0,0.2763,0.3865,1,0.3697,0.9635,0.326,0.9797,0.351,1,0,0.2763,0.0437,0.2601,0.0269,0.2242,0.0017,0.2463,0.9615,0.6129,0.7872,0.0173,0.0386,0.3633,0.2128,0.959,0.1743,0.9773,0.2128,0.959,0.0386,0.3633,0,0.3817,0.2128,0.959,0.2246,1,0.9733,0.654,0.9615,0.6129,0.9615,0.6129,1,0.5957,0.8257,0,0.7872,0.0173,0.2246,1,0.2128,0.959,0.1743,0.9773,0.1943,1,1,0.5957,0.9615,0.6129,0.9733,0.654,0.9964,0.6292,0.205,1,0.1908,0,0,0.4565,0.6522,0,0.9857,1,1,0.9785,1,0.522,0.7319,0,0,1,1,1,1,0.4024,0.5942,0,0.9277,1,1,0.8916,1,0.6089,0.9928,0,0,1,1,1,1,0.0109,1,0.6671,0,1,0.9831,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0.5824,0,1,1,0.9995,0.00019997,0.9943,0,0,0,0.0005,1,1,1,0.9943,0,0,0,0.0005,1,1,1,0.9943,0,0,0,0.0005,1,1,1,0.9943,0,0,0,0.0005,1,1,1,0.1046,0.00099999,1,1,0.9839,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0.046,0,0.046,0,0.9526,1,0.9526,1,1,1,0.9526,0,0.9526,0,1,1,0.046,1,0,0,0,0,0.046,1,0.0156,0.0046,0,0,1,0.9959,1,0.9994,0,0,0,0.0002,1,1,1,0.9994,0,0,0,0.0002,1,1,1,0.9994,0,0,0,0.0002,1,1,1,0.5,0,0.8823,1,1,0.6377,0.8536,0.1868,0.0658,1,0.5,0,0.1464,0.2222,0,0.7588,0.0878,1,0.5,0,0.1464,0.2057,0,0.7023,0,1,1,1,1,0,0,0,0,0.3249,1,0.3249,0.7597,0,0.2403,0,1,0.1164,0,0.1164,0,1,1,1,1,0.3434,0,0.3434,0,1,1,1,0,1,0.5702,1,1,0.0039,0.4337,0,0.1044,1,0.1406,0.2665,0,0.6875,0.071,0.4778,0.1735,0.0011,0.1089,0,0,0.1816,0.4689,1,0.0471,0,0,0.1021,0.0316,0.2668,0.4767,1,0.5687,0.1021,0.4662,0,0,0.0035,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,0,0.6718,0.047,1,0.7549,0,0,1,1,1,1,0.3558,0.9314,0,0,1,1,1,1,0.0996,0.5784,0,0.8894,1,1,0.8395,1,0.6119,0.9608,0,0,1,1,1,1,0.0569,0.9478,0.6219,0.1379,1,1,1,1,0.0111,0.0085,0,0,1,0.9932,1,0.9983,0,0,0,0.0003,1,1,1,0.9983,0,0,0,0.0003,1,1,1,0.9983,0,0,0,0.0003,1,1,1,0.9997,0.002,0,0,0,1,1,1,0.9995,0,0,0,0.0002,1,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0.0022,0.0012,0,0,1,0.9989,1,0.9998,0,0,0,0,1,1,1,0.9998,0,0,0,0,1,1,1,0.9998,0,0,0,0,1,1,1,0.0014,1,1,1,0.9985,0,0,0.0018,0.0009,0,0,1,0.9991,1,1,0,0.0007,0,0,1,0.9993,1,1,0,0,0,0.1379,1,0.9478,0.6219,0.3259,0,0.9608,0,0.0392,0,0,0.0569,0,1,0.5784,0,0.4216,0,0.1106,1,0.8894,1,0.1106,1,0.4216,0,0,0.6119,0,0.8395,0.9314,0,0.0686,0,0,0.0996,0,1,0.7549,0,0.2451,0,0,0.3558,0,1,0.8568,0.00010002,0.5441,0,0,0.6718,1,1,1,1,0.5687,0.1021,0.4767,1,0.9684,0.7332,0.7005,0.2896,0.4689,1,0.9529,1,0.9684,0.7332,0.9529,1,1,0.8979,0.4689,1,0.7005,0.2896,0.3384,0.0014,0.0471,0,0.929,0.5222,0.8699,0.4445,0.4582,1,0.8911,1,0.929,0.5222,0.8911,1,1,0.8184,0.4582,1,0.8699,0.4445,0.1735,0.0011,0.071,0.4778,0.8956,1,1,0.6876,0.8594,0.2666,0.5019,0,0.8956,1,0.5019,0,0.1406,0.2665,0.1044,1,1,0.3434,0.7597,0,0.2403,0,0,0.3434,0.9217,0,0.0783,0,0,0.1164,1,0.1164,0,1,1,1,1,0.3249,0,0.3249,0.0878,1,0.9122,1,0.8536,0.2057,0.5,0,0.8536,0.2057,0.9122,1,1,0.7023,0.9342,1,1,0.7588,0.8536,0.2222,0.9342,1,0.8536,0.2222,0.5,0,0.0658,1,0.5,0,0.1464,0.1868,0,0.6377,0.5,0,0,0.6377,0.1177,1,0.8823,1,0.0007,1,1,1,0.1046,0.00099999,0,0.00099999,0.0052,1,1,1,0.5824,0,0,0.0068,0.0508,0,0,1,1,0.6671,0.3781,0,0.9928,0,0.0072,0,0,0.0109,0,1,0.5942,0,0.4058,0,0.0723,1,0.9277,1,0.0723,1,0.4058,0,0,0.6089,0,0.8916,0.7319,0,0.2681,0,0,0.4024,0,1,0.6522,0,0.3479,0,0.0143,1,0.9857,1,0.0143,1,0.3479,0,0,0.522,0,0.9785,0.6229,0.00010002,0.1908,0,0.205,1,1,1,1,0.3381,0.7597,0,0.2403,0,1,1,0.9693,0,0.0307,0,1,1,1,0.0456,0,1,1,1,0.2403,0,0,0.3382,0.0722,1,0.9278,1,0.5,0,0,0.7416,0,0.7416,0.5,0,0.1464,0.2172,0.9278,1,1,0.7416,0.8536,0.2172,0.5,0,0.9278,1,0.5,0,0,0.7416,0.0722,1,0.8536,0.2117,0.5,0,0.1464,0.2117,0.9206,1,0.8536,0.2117,0.9206,1,1,0.7229,1,0.3266,0.7597,0,0,1,1,1,0.8647,0,0.1353,0,0,0.1892,0,1,0.9653,0,0.0347,0,0,0.0499,0,1,0,1,1,1,0.2403,0,0,0.3562]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_19.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1236;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.7750940332;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1348;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
