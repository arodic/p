// Converted from: ./flatroof_RoofTexture_18.obj
//  vertices: 410
//  faces: 139
//  normals: 0
//  colors: 0
//  uvs: 548
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0,0,0.9756,0.9545,0.7904,0.6487,0.6582,0.5135,0.4518,0,0.8537,0.5955,0.691,0.2646,0.5748,0.1182,0.4518,0,0.8537,0.5955,0.691,0.2646,0.5748,0.1182,0.4518,0,0.8537,0.5955,0.691,0.2646,0.5748,0.1182,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0.0008,0,0,1,1,1,1,0.00080001,0.0002,1,1,1,0.9991,0,0,0,0.0002,1,1,1,0.9991,0,0,0,0.0002,1,1,1,0.9991,0,0,0,0.0002,1,1,1,0.9991,0,0,0,0,0.0026,0.9929,0.3424,0.9923,0,0.9995,0,0.0018,0,0,1,1,1,0,0.04,0,0.9593,0.9999,0.9593,0.9999,0.04,0.9999,0.04,1,0,0,0,0,0.04,1,1,0.9999,0.9593,0,0.9593,0,1,0.5,0,0.85,1,1,0.7691,0.75,0,0,1,1,1,1,0.3572,0.9732,0.6001,0.0669,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,1,0.9209,0.00099999,0.0146,0.0143,0,1,1,1,0.9997,0,0.0146,0,0,1,1,1,0.9997,0,0.0146,0,0,1,1,1,0.9997,0,0.0146,0,0.9761,0.078,1,1,1,0.1893,0.9939,0.1308,1,1,0.0061,0.1274,0,0.1844,0,1,1,1,0.0061,0.1274,0,0.1844,0,1,0.9485,0.0352,1,0.1844,0.9939,0.1274,0.9761,0.076,1,1,0.8787,0,0.1989,0.0108,0,1,1,1,0.7407,0,0,0.0158,0.2552,1,1,1,0.7407,0,0,0.0158,0.2552,1,1,1,0.7407,0,0,0.0158,0.2552,1,0,0,0.2529,1,1,1,0.7511,0.0158,1,1,0.7461,0,0,0.0158,0.2499,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0.9584,1,0.039,0,0.039,0,0.9584,0,0.9584,0,1,1,1,1,0.9584,0,0,0,0.039,1,0.039,1,0,0,1,1,1,1,0,0,0,0,1,1,1,0.9997,0,0.001,0.0023,0,1,1,1,0.9997,0,0.0009,0,0.067,0.3644,0.25,0.0977,0.1464,0.2135,0.0121,0.3963,0.022,0.0365,0,0.2133,0,1,1,1,1,0,0,0,1,1,0.0061,0.1265,0,0.1831,0,1,1,1,0.0061,0.1265,0,0.1831,0,1,0,1,1,1,1,0,0,0,0,0.7597,1,0,0.3494,0,0,0.2403,1,0,0,0.9523,0.0735,1,1,1,1,1,0.2403,0,0,0.3543,0,1,1,0.0072,0.0014,0,0,1,0.9993,1,0.9987,0,0,0,0.0006,1,1,1,0.9987,0,0,0,0.0006,1,1,1,0.9987,0,0,0,0.0006,1,1,1,0.8059,1,0.1047,0.4604,0,1,0.5423,0,0.8654,1,1,0.8012,1,0.6764,1,1,0.162,0,0,0.2394,0,1,1,1,0.2043,0,0,0.3018,0,1,0.1768,1,0.5,0,0,0.7388,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0.7388,0.5,0,0.1768,1,0.8232,1,0.7958,0,0.2043,0,1,1,1,0.3018,0.838,0,0.162,0,1,1,1,0.2394,0.5423,0,0.4578,0,0.1346,1,0.8654,1,0.1346,1,0.4578,0,0,0.6764,0,0.8012,1,0.00010002,0.5651,0,0.1047,0.4604,0.8059,1,1,0.3543,0.7597,0,0.2403,0,1,1,0,0.0477,0,0.9523,1,0,0.0735,0,1,1,1,0,0,0.7597,0.3494,1,1,1,1,0.1831,0.9485,0.035,0.9136,0.009,0.9485,0.035,1,0.1831,0.9939,0.1265,0.9761,0.0755,1,1,0.9136,0.009,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.009,0.0515,0.035,1,1,0.0515,0.035,0.0239,0.0755,0.0061,0.1265,1,1,1,0.1831,0.9485,0.035,0.9136,0.009,0.9485,0.035,1,0.1831,0.9939,0.1265,0.9761,0.0755,1,1,0.9136,0.009,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.009,0.0515,0.035,1,1,0.0515,0.035,0.0239,0.0755,0.0061,0.1265,0.9879,0.2133,0.9775,0.1726,0.978,0.5731,1,0.3963,0.978,0.5731,0.9775,0.1726,0.0345,0,0.9234,0.7317,0.9234,0.7317,0.0345,0,0.7334,0.9526,0.84,0.8611,0.7334,0.9526,0.0345,0,0.4809,1,0.6109,1,0.4809,1,0.0345,0,0.2334,0.8611,0.3521,0.9526,0.2334,0.8611,0.0345,0,0.0574,0.5731,0.1329,0.7317,0.0574,0.5731,0.0345,0,0.022,0.0365,0.0121,0.3963,0.983,0.5402,0.933,0.3644,0.8536,0.2135,1,0.7289,1,0.7289,0.8536,0.2135,0.75,0.0977,0.983,0.9176,0.983,0.9176,0.75,0.0977,0.6294,0.0248,0.9595,1,0.9595,1,0.6294,0.0248,0.017,0.9176,0.0405,1,0.017,0.9176,0.6294,0.0248,0.5,0,0,0.7289,0,0.7289,0.5,0,0.3706,0.0248,0.017,0.5402,0.017,0.5402,0.3706,0.0248,0.25,0.0977,0.067,0.3644,0,1,1,1,0.0061,0.1274,0,0.1844,0.0061,0.1274,1,1,0.0515,0.0352,0.0239,0.076,0.0515,0.0352,1,1,0.125,0,0.0864,0.009,0.125,0,1,1,0.9136,0.009,0.875,0,0.9136,0.009,1,1,1,0.1844,0.9485,0.0352,0.875,0,0.125,0,1,1,0.9136,0.009,0.9136,0.009,1,1,1,0.1844,0.9485,0.0352,0.9485,0.0352,1,0.1844,0.9939,0.1274,0.9761,0.076,1,1,0.125,0,0.0864,0.009,0.0515,0.0352,1,1,0.0515,0.0352,0.0239,0.076,0.0061,0.1274,0.875,0,0.125,0,1,1,0.9136,0.009,0.9136,0.009,1,1,1,0.1844,0.9485,0.0352,0.9485,0.0352,1,0.1844,0.9939,0.1274,0.9761,0.076,1,1,0.125,0,0.0864,0.009,0.0515,0.0352,1,1,0.0515,0.0352,0.0239,0.076,0.0061,0.1274,0.875,0,0.125,0,1,1,0.9136,0.0093,1,1,0.125,0,0,0.1893,0,1,0,0.1893,0.125,0,0.0864,0.0093,0.0061,0.1308,0.0061,0.1308,0.0864,0.0093,0.0515,0.0361,0.0239,0.078,0.9136,0.0093,1,1,0.9761,0.078,0.9485,0.0361,0,1,1,1,0.9997,0,0.9209,0.00099999,0,0,0.0669,1,0.9732,0.6001,0.3731,0,0.75,0,0.25,0,0,0.3572,0,1,0,0.7691,0.15,1,0.85,1,0.5,0,0,0.0026,0.0019,1,1,1,0.9929,0.3424,0.0081,1,1,1,0.9446,0.8045,0,0,0,0,0.9446,0.8045,0.8537,0.5955,0.4518,0,0.0081,1,1,1,0.9446,0.8045,0,0,0,0,0.9446,0.8045,0.8537,0.5955,0.4518,0,0.0081,1,1,1,0.9446,0.8045,0,0,0,0,0.9446,0.8045,0.8537,0.5955,0.4518,0,0.01,1,1,1,0.9756,0.9545,0,0]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_18.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1230;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.8526773457;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1374;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
