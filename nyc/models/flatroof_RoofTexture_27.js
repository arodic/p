// Converted from: ./flatroof_RoofTexture_27.obj
//  vertices: 293
//  faces: 106
//  normals: 0
//  colors: 0
//  uvs: 411
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0.0061,0.1277,0,0.1847,0,1,1,1,1,0,0,0,0,1,0,1,1,1,0.1193,0,0,1,1,0.9434,0.4243,0,0.0826,0,0,1,1,0.9434,0.4243,0,0.0826,0,0,1,1,0.9434,0.4243,0,0.0826,0,0,1,1,0.9434,0.4243,0,0.0826,0,1,1,1,0,0,0,0,1,0,1,1,0.2521,1,0,0,0,1,1,1,0,0,0,0,1,0.2403,0,1,0.9032,1,0.2922,0.7597,0,1,0,0,0.9046,0.1421,1,1,1,1,1,0.1699,0,0,0.2485,0,1,1,1,0.2403,0,0,0.3455,0,1,0.7603,0,0,0.6236,0.0891,1,1,1,0,1,1,0.2032,0.7835,0,0.1525,0,0,1,1,1,1,0,0,0,1,1,0.125,0,0,0.1908,0,1,1,1,0.125,0,0,0.1908,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0.0061,0.1309,0.0864,0.0093,0.0515,0.0362,0.0239,0.0781,0.0061,0.1309,0.0864,0.0093,0.0515,0.0362,0.0239,0.0781,0.0061,0.1309,0.0864,0.0093,0.0515,0.0362,0.0239,0.0781,0.0061,0.1309,0.0864,0.0093,0.0515,0.0362,0.0239,0.0781,0,0,0,1,1,1,1,0,1,0.0318,0.0042,0,0,1,0.996,1,0.9998,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0.017,0.5294,0.1464,0.2092,0.067,0.3571,0.8536,0.191,0.983,0.4834,0.933,0.3261,0.0262,0,0,1,1,1,0.962,0.0558,0.9775,0.6643,0.0319,0.0589,0,1,0.9756,1,0.9775,0.6643,0.0319,0.0589,0,1,0.9756,1,0.9775,0.6643,0.0319,0.0589,0,1,0.9756,1,0.9775,0.6643,0.0319,0.0589,0,1,0.9756,1,0.9775,0.6643,0.0319,0.0589,0,1,0.9756,1,1,1,1,0,0,0,0,1,1,1,0.2521,0,0,0,0,1,0,1,1,1,1,0,0,0,1,0,0.7479,0,0.2521,0,1,1,0.9775,0.6643,1,0,0.0319,0.0589,0.9775,0.6643,1,0,0.0319,0.0589,0.9775,0.6643,1,0,0.0319,0.0589,0.9775,0.6643,1,0,0.0319,0.0589,0.9775,0.6643,1,0,0.0319,0.0589,0.067,0.9783,0.0798,1,0.9202,1,0.017,0.821,0.017,0.821,0.9202,1,0.017,0.4834,0,0.6522,0.017,0.4834,0.9202,1,0.1464,0.191,0.067,0.3261,0.1464,0.191,0.9202,1,0.3706,0.0222,0.25,0.0874,0.3706,0.0222,0.9202,1,0.933,0.9783,0.5,0,0.5,0,0.933,0.9783,0.983,0.821,0.6294,0.0222,0.6294,0.0222,0.983,0.821,1,0.6522,0.75,0.0874,0.75,0.0874,1,0.6522,0.983,0.4834,0.8536,0.191,0.933,0.3571,0.8536,0.2092,1,0.7143,0.983,0.5294,1,0.7143,0.8536,0.2092,0.75,0.0957,0.983,0.8992,0.983,0.8992,0.75,0.0957,0.6294,0.0243,0.9537,1,0.9537,1,0.6294,0.0243,0.5,0,0.0463,1,0.0463,1,0.5,0,0.3706,0.0243,0.017,0.8992,0.017,0.8992,0.3706,0.0243,0.25,0.0957,0,0.7143,0,0.7143,0.25,0.0957,0.1464,0.2092,0.017,0.5294,1,1,1,0.1895,0.9939,0.1309,0.9761,0.0781,1,1,0.9761,0.0781,0.9485,0.0362,0.9136,0.0093,1,1,0.9136,0.0093,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1895,0,0.1895,0.125,0,0.0864,0.0093,0.0061,0.1309,1,1,1,0.1895,0.9939,0.1309,0.9761,0.0781,1,1,0.9761,0.0781,0.9485,0.0362,0.9136,0.0093,1,1,0.9136,0.0093,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1895,0,0.1895,0.125,0,0.0864,0.0093,0.0061,0.1309,1,1,1,0.1895,0.9939,0.1309,0.9761,0.0781,1,1,0.9761,0.0781,0.9485,0.0362,0.9136,0.0093,1,1,0.9136,0.0093,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1895,0,0.1895,0.125,0,0.0864,0.0093,0.0061,0.1309,1,1,1,0.1895,0.9939,0.1309,0.9761,0.0781,1,1,0.9761,0.0781,0.9485,0.0362,0.9136,0.0093,1,1,0.9136,0.0093,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1895,0,0.1895,0.125,0,0.0864,0.0093,0.0061,0.1309,1,1,1,0.1908,0.875,0,0.125,0,1,1,1,0.1908,0.875,0,0.125,0,0,1,0.8764,1,1,0.2032,1,0.3455,0.7597,0,0.2403,0,1,1,0.8301,0,0.1699,0,1,1,1,0.2485,0,0.0954,0,0.9046,1,0,0.1421,0,0,0.9032,0.0796,1,0.9204,1,0,0.2922,0,0.2922,0.9204,1,1,0.9032,0.2403,0,1,1,1,0.7479,1,0.2521,0,1,0,1,0.9937,1,1,0.9434,0,1,0.9937,1,1,0.9434,0,1,0.9937,1,1,0.9434,0,1,0.9937,1,1,0.9434,1,1,1,0.1847,0.9485,0.0353,0.9136,0.009,0.9485,0.0353,1,0.1847,0.9939,0.1277,0.9761,0.0762,1,1,0.9136,0.009,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.009,0.0515,0.0353,1,1,0.0515,0.0353,0.0239,0.0762,0.0061,0.1277]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_27.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 879;
  var numMorphTargets = model.morphTargets.length;
  var scale = 2.06679248047;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1034;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
