// Converted from: ./flatroof_RoofTexture_16.obj
//  vertices: 430
//  faces: 161
//  normals: 0
//  colors: 0
//  uvs: 632
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0.0035,1,0.2982,0,0,0.0109,0.998,1,0.0015,0.24,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0,0.9421,1,0.9421,1,0,1,1,1,0.9421,0,0.9421,0,1,0.9581,0.2654,0.347,0.0349,0.0169,0.7326,0.6281,0.9631,0.6111,1,0.6281,0.9631,0.0169,0.7326,0,0.7696,0.6281,0.9631,0.67,0.9799,1,0.2822,0.9581,0.2654,0.9581,0.2654,0.9751,0.2304,0.364,0,0.347,0.0349,0.67,0.9799,0.6281,0.9631,0.6111,1,0.6454,1,0.9751,0.2304,0.9581,0.2654,1,0.2822,0.999,0.2524,0.7122,0,0,0.4483,0.1599,1,1,1,0,1,0.7931,1,1,0,0.2086,0,0,1,0.7931,1,1,0,0.2086,0,0,1,0.7931,1,1,0,0.2086,0,0,1,0.7931,1,1,0,0.2086,0,0,1,0.7931,1,1,0,0.2086,0,0.9637,0.6806,0.7422,0.0323,0.0364,0.3173,0.2578,0.9656,0.2215,0.9813,0.2578,0.9656,0.0364,0.3173,0,0.333,0.2578,0.9656,0.2692,1,0.9751,0.7151,0.9637,0.6806,0.9637,0.6806,1,0.667,0.7785,0.0187,0.7422,0.0323,0.0249,0.2849,0.0364,0.3173,0.7422,0.0323,0.7308,0,0.2692,1,0.2578,0.9656,0.2215,0.9813,0.2405,1,1,0.667,0.9637,0.6806,0.9751,0.7151,0.9968,0.6947,0,0.333,0.0364,0.3173,0.0249,0.2849,0.0032,0.3054,0.7308,0,0.7422,0.0323,0.7785,0.0187,0.7595,0.00010002,1,1,0.8049,0,0.1185,0.00099999,0,1,0,1,0.7815,1,1,0,0.2195,0,0,1,0.7815,1,1,0,0.2195,0,0.9555,0.4176,1,0.3478,0.418,0,0.7976,0.6549,0.418,0,0,0.6549,0.8022,0.6577,0.8101,0.6454,0.7976,0.6549,0,0.6549,0.5774,1,0.7976,0.6549,0.1215,0.1702,0,1,0.0466,1,0.1215,0.1702,0.0466,1,0.7675,1,0.4731,0.3465,0.4731,0.1702,0.1215,0.1702,0.4731,0.3465,1,1,1,0.3465,0.4731,0.3465,0.7675,1,0,1,0.9957,1,1,0.9649,0.1238,0,0.1167,0,1,0.5077,0.5654,0,1,1,1,0,0,0,0,1,0.0061,0.1264,0.0864,0.009,0.0515,0.0349,0.0239,0.0754,0.0061,0.1264,0.0864,0.009,0.0515,0.0349,0.0239,0.0754,1,1,1,0,0,0,0,1,0.742,0,0.0468,0.2422,0.3048,0.9615,1,0.7194,0.258,0.9792,0.3048,0.9615,0.0468,0.2422,0,0.2599,0.318,1,0.3048,0.9615,0.258,0.9792,0.2815,1,0,0.2599,0.0468,0.2422,0.0334,0.2066,0.0051,0.2292,0.9626,0.6057,0.7644,0.0165,0.0375,0.368,0.2357,0.9572,0.1982,0.9769,0.2357,0.9572,0.0375,0.368,0,0.3877,0.2357,0.9572,0.2495,1,0.9764,0.6485,0.9626,0.6057,0.9626,0.6057,1,0.5892,0.8018,0,0.7644,0.0165,0.2495,1,0.2357,0.9572,0.1982,0.9769,0.2193,1,1,0.5892,0.9626,0.6057,0.9764,0.6485,0.9982,0.6234,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1,0.2521,0,0,0.3767,0,1,1,1,0.239,0,0,0.3524,0,1,1,1,1,0,0,0,0,1,0.5,0,0.8536,0.9704,1,0.5684,0.8536,0.1665,0.9203,1,0.1464,0.2115,0,0.7222,0.0797,1,0.5483,0.9533,0.0282,0.7599,0.1766,0.9533,0.5055,0,0.4773,0.0432,0.747,0.0432,0.7751,0,0.0282,0.7599,0,0.8066,0.1484,1,0.1766,0.9533,0.1766,0.9533,0.1484,1,0.5569,1,0.5483,0.9533,0.9516,0.3098,1,0.2929,0.7751,0,0.747,0.0432,0.0033,0.0007,0,1,0.9985,1,1,0,0.9964,0,0,0,0.003,1,1,1,0.9964,0,0,0,0.003,1,1,1,0.9964,0,0,0,0.003,1,1,1,0.9964,0,0,0,0.003,1,1,1,0.9964,0,0,0,0.003,1,1,1,0.9964,0,0,0,0.003,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0.9989,0.0039,0.0001,0,0,1,1,1,0.9985,0,0,0,0.0002,1,1,1,0.9985,0,0,0,0.0002,1,1,1,0.9985,0,0,0,0.0002,1,1,1,0.9985,0,0,0,0.0002,1,1,1,0.9985,0,0,0,0.0002,1,1,1,0,0,0,1,1,1,1,0,0.9485,0.0341,1,0.1786,0.9939,0.1234,0.9761,0.0736,0.9485,0.0341,1,0.1786,0.9939,0.1234,0.9761,0.0736,0.9485,0.0341,1,0.1786,0.9939,0.1234,0.9761,0.0736,0.9485,0.0341,1,0.1786,0.9939,0.1234,0.9761,0.0736,0.9496,0.0337,1,0.1763,0.994,0.1214,0.9764,0.0719,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0.0061,0.1268,0,0.1836,0,1,1,1,0.0061,0.1268,0,0.1836,0,1,1,1,0.0061,0.1268,0,0.1836,0,1,1,1,1,0,0,0,0,1,1,1,1,0.1836,0.9485,0.0351,0.9136,0.009,0.9485,0.0351,1,0.1836,0.9939,0.1268,0.9761,0.0757,1,1,0.9136,0.009,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.009,0.0515,0.0351,1,1,0.0515,0.0351,0.0239,0.0757,0.0061,0.1268,1,1,1,0.1836,0.9485,0.0351,0.9136,0.009,0.9485,0.0351,1,0.1836,0.9939,0.1268,0.9761,0.0757,1,1,0.9136,0.009,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.009,0.0515,0.0351,1,1,0.0515,0.0351,0.0239,0.0757,0.0061,0.1268,1,1,1,0.1836,0.9485,0.0351,0.9136,0.009,0.9485,0.0351,1,0.1836,0.9939,0.1268,0.9761,0.0757,1,1,0.9136,0.009,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.009,0.0515,0.0351,1,1,0.0515,0.0351,0.0239,0.0757,0.0061,0.1268,1,1,1,0.1763,0.9496,0.0337,0.9149,0.0086,1,1,0.9149,0.0086,0.8764,0,0,1,0,1,0.8764,0,0.1235,0,0,0.1763,0,0.1763,0.1235,0,0.0851,0.0086,0.006,0.1214,0.006,0.1214,0.0851,0.0086,0.0504,0.0337,0.0236,0.0719,1,1,1,0.1786,0.9485,0.0341,0.9136,0.0087,1,1,0.9136,0.0087,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1786,0,0.1786,0.125,0,0.0864,0.0087,0.0061,0.1234,0.0061,0.1234,0.0864,0.0087,0.0515,0.0341,0.0239,0.0736,1,1,1,0.1786,0.9485,0.0341,0.9136,0.0087,1,1,0.9136,0.0087,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1786,0,0.1786,0.125,0,0.0864,0.0087,0.0061,0.1234,0.0061,0.1234,0.0864,0.0087,0.0515,0.0341,0.0239,0.0736,1,1,1,0.1786,0.9485,0.0341,0.9136,0.0087,1,1,0.9136,0.0087,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1786,0,0.1786,0.125,0,0.0864,0.0087,0.0061,0.1234,0.0061,0.1234,0.0864,0.0087,0.0515,0.0341,0.0239,0.0736,1,1,1,0.1786,0.9485,0.0341,0.9136,0.0087,1,1,0.9136,0.0087,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1786,0,0.1786,0.125,0,0.0864,0.0087,0.0061,0.1234,0.0061,0.1234,0.0864,0.0087,0.0515,0.0341,0.0239,0.0736,0.4773,0.0432,0.0282,0.7599,0.9516,0.3098,0.747,0.0432,0.9516,0.3098,0.0282,0.7599,0.5483,0.9533,0.8693,0.6868,0.9203,1,1,0.7222,0.8536,0.2115,0.9203,1,0.8536,0.2115,0.5,0,0.1464,0.2115,0.5,0,0.1464,0.1665,0.7906,1,0.8536,0.9704,0.7906,1,0.1464,0.1665,0.1464,0.9704,0.2094,1,0.1464,0.9704,0.1464,0.1665,0,0.5684,0.761,0,0.239,0,1,1,1,0.3524,1,0.3767,0.7479,0,0.2521,0,1,1,1,1,1,0.183,0.9939,0.1264,0.9761,0.0754,1,1,0.9761,0.0754,0.9485,0.0349,0.9136,0.009,1,1,0.9136,0.009,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.183,0,0.183,0.125,0,0.0864,0.009,0.0061,0.1264,1,1,1,0.183,0.9939,0.1264,0.9761,0.0754,1,1,0.9761,0.0754,0.9485,0.0349,0.9136,0.009,1,1,0.9136,0.009,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.183,0,0.183,0.125,0,0.0864,0.009,0.0061,0.1264,0,1,0.9427,1,1,0.5077,0.1167,0,0.1215,0.1702,0.1215,0,0,0,0,1,0.9555,0.4176,0.418,0,0.7976,0.6549,0.8101,0.6454,0.998,1,1,0,0.209,0.0156,0.0015,0.24,0.0035,1,1,1,0.9931,0.6849,0.2982,0]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_16.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1290;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.77835750586;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1586;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
