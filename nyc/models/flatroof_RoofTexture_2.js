// Converted from: ./flatroof_RoofTexture_2.obj
//  vertices: 367
//  faces: 147
//  normals: 0
//  colors: 0
//  uvs: 579
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[1,0,0,0,0,1,1,1,0.0087,0.0864,0.1234,0.0061,0.0736,0.0239,0.0341,0.0515,0.9913,0.9136,0.8766,0.9939,0.9264,0.9761,0.9659,0.9485,0.9913,0.9136,0.8766,0.9939,0.9264,0.9761,0.9659,0.9485,0.9913,0.9136,0.8766,0.9939,0.9264,0.9761,0.9659,0.9485,0.9916,0.9171,0.882,0.9941,0.9311,0.9769,0.9671,0.9516,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0.7597,0.8844,0,0.2861,0,0,0.2403,1,0,0,0.962,0.0575,1,1,1,1,1,0.079,0,0,0.1183,0,1,1,1,0.1575,0,0,0.2314,0,1,1,1,0.2403,0,0,0.346,0,1,0.0008,1,1,1,0.9973,0,0,0.0066,0.0008,1,1,1,0.9971,0,0,0,0.0008,1,1,1,0.9971,0,0,0,0.0008,1,1,1,0.9971,0,0,0,0.0008,1,1,1,0.9971,0,0,0,0.0008,1,1,1,0.9971,0,0,0,0.043,0.3796,0.1227,0.9563,0.9571,0.5941,0.8774,0.0174,0.9203,0,0.8774,0.0174,0.9571,0.5941,1,0.5767,0.043,0.3796,0,0.3995,0.0797,0.9762,0.1227,0.9563,0.9629,0.6378,0.9571,0.5941,0.1227,0.9563,0.1285,1,1,0.5767,0.9571,0.5941,0.9629,0.6378,0.9909,0.6119,0.1285,1,0.1227,0.9563,0.0797,0.9762,0.0969,1,1,1,1,0,0,0,0,1,0.5328,0,0,1,1,1,0.9725,0.00040001,0.9693,0,0,1,0.943,1,1,0,0.0306,1,1,0.0015,0.0582,0,0,1,0.9693,0,0,1,0.943,1,1,0,1,1,1,0,0,0,0,1,1,1,0.0061,0.1234,0,0.1786,0,1,1,1,0.0061,0.1234,0,0.1786,0,1,1,1,0.0061,0.1234,0,0.1786,0,1,1,1,0.0061,0.1234,0,0.1786,0,1,1,1,1,0,0,0,0,1,0.017,0.519,0.1464,0.2051,0.067,0.3501,0.0514,0.5707,0,0.2088,0.0089,0.3929,0.933,0.3829,1,0.7659,0.983,0.5677,0.933,0.3829,1,0.7659,0.983,0.5677,0.0478,1,0.017,0.5266,0,0.7105,0.017,0.8943,0,1,1,1,1,0,0,0,1,1,0.0061,0.1289,0,0.1866,0,1,1,1,0.0061,0.1289,0,0.1866,0,1,1,1,1,0,0,0,0,1,1,1,1,0.1866,0.9485,0.0356,0.9136,0.0091,0.9485,0.0356,1,0.1866,0.9939,0.1289,0.9761,0.0769,1,1,0.9136,0.0091,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0091,0.0515,0.0356,1,1,0.0515,0.0356,0.0239,0.0769,0.0061,0.1289,1,1,1,0.1866,0.9485,0.0356,0.9136,0.0091,0.9485,0.0356,1,0.1866,0.9939,0.1289,0.9761,0.0769,1,1,0.9136,0.0091,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0091,0.0515,0.0356,1,1,0.0515,0.0356,0.0239,0.0769,0.0061,0.1289,0.0478,1,0.9522,1,0.067,0.3552,0.017,0.5266,0.067,0.3552,0.9522,1,0.25,0.0952,0.1464,0.2081,0.25,0.0952,0.9522,1,0.5,0,0.3706,0.0242,0.5,0,0.9522,1,0.75,0.0952,0.6294,0.0242,0.75,0.0952,0.9522,1,0.983,0.8943,0.8536,0.2081,0.8536,0.2081,0.983,0.8943,1,0.7105,0.933,0.3552,0.933,0.3552,1,0.7105,0.983,0.5266,0.017,0.9641,0.0267,1,0.017,0.5677,0,0.7659,0.017,0.5677,0.0267,1,0.9733,1,0.067,0.3829,0.067,0.3829,0.9733,1,0.25,0.1026,0.1464,0.2243,0.25,0.1026,0.9733,1,0.5,0,0.3706,0.0261,0.5,0,0.9733,1,0.75,0.1026,0.6294,0.0261,0.75,0.1026,0.9733,1,0.983,0.9641,0.8536,0.2243,0.8536,0.2243,0.983,0.9641,1,0.7659,0.933,0.3829,0.017,0.9641,0.0267,1,0.017,0.5677,0,0.7659,0.017,0.5677,0.0267,1,0.9733,1,0.067,0.3829,0.067,0.3829,0.9733,1,0.25,0.1026,0.1464,0.2243,0.25,0.1026,0.9733,1,0.5,0,0.3706,0.0261,0.5,0,0.9733,1,0.75,0.1026,0.6294,0.0261,0.75,0.1026,0.9733,1,0.983,0.9641,0.8536,0.2243,0.8536,0.2243,0.983,0.9641,1,0.7659,0.933,0.3829,0.9911,0.2088,0.9828,0.1742,0.9749,0.5707,1,0.3929,0.9749,0.5707,0.9828,0.1742,0.0363,0,0.9174,0.7301,0.9174,0.7301,0.0363,0,0.7229,0.9524,0.8314,0.8603,0.7229,0.9524,0.0363,0,0.4687,1,0.5992,1,0.4687,1,0.0363,0,0.2229,0.8603,0.3404,0.9524,0.2229,0.8603,0.0363,0,0.0251,0.031,0.1243,0.7301,0.1243,0.7301,0.0251,0.031,0,0.2088,0.0514,0.5707,0.933,0.3501,0.8536,0.2051,1,0.7003,0.983,0.519,1,0.7003,0.8536,0.2051,0.75,0.0938,0.983,0.8815,0.983,0.8815,0.75,0.0938,0.6294,0.0239,0.9479,1,0.9479,1,0.6294,0.0239,0.5,0,0.0521,1,0.0521,1,0.5,0,0.3706,0.0239,0.017,0.8815,0.017,0.8815,0.3706,0.0239,0.25,0.0938,0,0.7003,0,0.7003,0.25,0.0938,0.1464,0.2051,0.017,0.519,1,1,1,0.1786,0.9485,0.0341,0.9136,0.0087,0.9485,0.0341,1,0.1786,0.9939,0.1234,0.9761,0.0736,1,1,0.9136,0.0087,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0087,0.0515,0.0341,1,1,0.0515,0.0341,0.0239,0.0736,0.0061,0.1234,1,1,1,0.1786,0.9485,0.0341,0.9136,0.0087,0.9485,0.0341,1,0.1786,0.9939,0.1234,0.9761,0.0736,1,1,0.9136,0.0087,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0087,0.0515,0.0341,1,1,0.0515,0.0341,0.0239,0.0736,0.0061,0.1234,1,1,1,0.1786,0.9485,0.0341,0.9136,0.0087,0.9485,0.0341,1,0.1786,0.9939,0.1234,0.9761,0.0736,1,1,0.9136,0.0087,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0087,0.0515,0.0341,1,1,0.0515,0.0341,0.0239,0.0736,0.0061,0.1234,1,1,1,0.1786,0.9485,0.0341,0.9136,0.0087,0.9485,0.0341,1,0.1786,0.9939,0.1234,0.9761,0.0736,1,1,0.9136,0.0087,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0087,0.0515,0.0341,1,1,0.0515,0.0341,0.0239,0.0736,0.0061,0.1234,0.0569,0.0015,0,1,0.9693,0,0.9419,1,1,0.0015,0.0306,1,0.0569,0.0015,0,1,0.9693,0,0.0287,0.00080001,0,1,0.5328,0,1,0.346,0.7597,0,0.2403,0,1,1,0.8425,0,0.1575,0,1,1,1,0.2314,0.921,0,0.079,0,1,1,1,0.1183,0,0.038,0,0.962,1,0,0.0575,0,0.8844,1,1,0.9029,1,0.0971,0.2861,1,0.2861,1,1,0.0971,0.8844,0,0,0.7597,0,1,0.8276,1,1,0.8789,1,0.1211,0,1,1,0.1211,0.9916,0.0829,0,0,0,0,0.9916,0.0829,0.9671,0.0484,0.8276,0,0.8276,0,0.9671,0.0484,0.9311,0.0231,0.882,0.0059,1,0.8789,0.8276,1,0.882,0.9941,0.9916,0.9171,0,1,0.8214,1,1,0.875,1,0.125,0,1,1,0.125,0.9913,0.0864,0,0,0,0,0.9913,0.0864,0.9659,0.0515,0.8214,0,0.8214,0,0.9659,0.0515,0.9264,0.0239,0.8766,0.0061,1,0.875,0.8214,1,0.8766,0.9939,0.9913,0.9136,0,1,0.8214,1,1,0.875,1,0.125,0,1,1,0.125,0.9913,0.0864,0,0,0,0,0.9913,0.0864,0.9659,0.0515,0.8214,0,0.8214,0,0.9659,0.0515,0.9264,0.0239,0.8766,0.0061,1,0.875,0.8214,1,0.8766,0.9939,0.9913,0.9136,0,1,0.8214,1,1,0.875,1,0.125,0,1,1,0.125,0.9913,0.0864,0,0,0,0,0.9913,0.0864,0.9659,0.0515,0.8214,0,0.8214,0,0.9659,0.0515,0.9264,0.0239,0.8766,0.0061,1,0.875,0.8214,1,0.8766,0.9939,0.9913,0.9136,1,0,0.1786,0,0,0.125,0,0.875,1,0,0,0.875,0.0087,0.9136,1,1,1,1,0.0087,0.9136,0.0341,0.9485,0.1786,1,0.1786,1,0.0341,0.9485,0.0736,0.9761,0.1234,0.9939,0,0.125,0.1786,0,0.1234,0.0061,0.0087,0.0864]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_2.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1101;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.88943862891;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1452;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
