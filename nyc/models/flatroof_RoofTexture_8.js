// Converted from: ./flatroof_RoofTexture_8.obj
//  vertices: 312
//  faces: 109
//  normals: 0
//  colors: 0
//  uvs: 422
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0.125,0,1,1,1,0.1923,0.875,0,0,1,0.875,0,0.125,0,0,0.1786,0.6969,0,0.9054,1,1,0.4653,1,0.8373,0,0.6784,0.169,1,0.8726,1,0,0.0521,0.0241,1,1,1,0.9695,0,0,0.793,1,0.7254,0.4778,0,1,1,0.8445,0,0.1454,0.00010002,0,1,0,1,0.775,1,1,0,0.2251,0,0,1,0.775,1,1,0,0.2251,0,0,1,0.775,1,1,0,0.2251,0,0,1,0.775,1,1,0,0.2251,0,0,1,1,1,1,0,0,0,1,1,0.125,0,0,0.1826,0,1,1,1,0.125,0,0,0.1826,0,1,0,1,1,1,1,0,0,0,0.6522,0.00010002,0.1674,1,1,1,1,0.1256,0,0.1256,0,1,1,1,1,0.4892,0,0.4892,0,1,1,1,1,0.9518,0,0.9518,0.0323,1,0.9677,1,1,0.1851,0,0.1851,0,1,1,1,0.5516,0,0.9186,1,1,0.6611,1,0.1097,0.0246,0,0,1,0.9799,1,0.9611,0,0,0,0.0372,1,1,1,0.2382,1,0.1464,0.1643,0,0.5608,0.1464,0.9574,0.0693,1,0.1464,0.2195,0,0.7493,0.0693,1,0.1464,0.2195,0,0.7493,0.0693,1,0.1464,0.2195,0,0.7493,0.0693,1,0.1464,0.2195,0,0.7493,0.0693,1,0.1464,0.2195,0,0.7493,0.5452,1,0.0722,0.3786,0,0.6716,0.1784,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0.0023,0.0011,0,0,1,0.9993,1,0.9996,0,0,0,0,1,1,1,0.9996,0,0,0,0,1,1,1,0.9996,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0.7039,1,0.1518,0.4875,0,1,1,1,0.1412,0,0,0.2093,0,1,1,1,0.2439,0,0,0.3615,0,1,0.628,0,0.9535,1,1,0.9311,1,0.5515,0.1744,1,0.5,0,0,0.7414,1,0,0,0,0,1,1,1,1,1,0.0061,0.1251,0,0.181,0,1,1,1,0.0061,0.1251,0,0.181,0,1,1,1,0.0061,0.1251,0,0.181,0,1,1,1,0.0061,0.1251,0,0.181,0,1,1,1,1,0,0,0,0,1,1,1,1,0.181,0.9485,0.0346,0.9136,0.0089,0.9485,0.0346,1,0.181,0.9939,0.1251,0.9761,0.0746,1,1,0.9136,0.0089,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0089,0.0515,0.0346,1,1,0.0515,0.0346,0.0239,0.0746,0.0061,0.1251,1,1,1,0.181,0.9485,0.0346,0.9136,0.0089,0.9485,0.0346,1,0.181,0.9939,0.1251,0.9761,0.0746,1,1,0.9136,0.0089,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0089,0.0515,0.0346,1,1,0.0515,0.0346,0.0239,0.0746,0.0061,0.1251,1,1,1,0.181,0.9485,0.0346,0.9136,0.0089,0.9485,0.0346,1,0.181,0.9939,0.1251,0.9761,0.0746,1,1,0.9136,0.0089,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0089,0.0515,0.0346,1,1,0.0515,0.0346,0.0239,0.0746,0.0061,0.1251,1,1,1,0.181,0.9485,0.0346,0.9136,0.0089,0.9485,0.0346,1,0.181,0.9939,0.1251,0.9761,0.0746,1,1,0.9136,0.0089,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0089,0.0515,0.0346,1,1,0.0515,0.0346,0.0239,0.0746,0.0061,0.1251,1,0.7414,0.5,0,0.1744,1,0.8256,1,0.628,0,0.372,0,0,0.5515,0,0.9311,0.628,0,0,0.9311,0.0465,1,0.9535,1,0.7561,0,0.2439,0,1,1,1,0.3615,0.8588,0,0.1412,0,1,1,1,0.2093,1,0,0.6393,0,0.1518,0.4875,0.7039,1,0.8874,0,0.0722,0.3786,0.5452,1,0.8855,0.6716,0.8874,0,0.8855,0.6716,1,0.2072,0.9307,1,1,0.7493,0.8536,0.2195,0.5,0,0.9307,1,0.5,0,0.1464,0.2195,0.0693,1,0.9307,1,1,0.7493,0.8536,0.2195,0.5,0,0.9307,1,0.5,0,0.1464,0.2195,0.0693,1,0.9307,1,1,0.7493,0.8536,0.2195,0.5,0,0.9307,1,0.5,0,0.1464,0.2195,0.0693,1,0.9307,1,1,0.7493,0.8536,0.2195,0.5,0,0.9307,1,0.5,0,0.1464,0.2195,0.0693,1,0.9307,1,1,0.7493,0.8536,0.2195,0.5,0,0.9307,1,0.5,0,0.1464,0.2195,0.0693,1,0.5,0,0.1464,0.1643,0.2382,1,0.7618,1,0.5,0,0.7618,1,0.8536,0.9574,0.8536,0.1643,0.8536,0.1643,0.8536,0.9574,1,0.5608,0.2403,0,0,1,0.9186,1,0.5516,0,0.8761,0,0.1239,0,0,0.1851,1,0.1851,0.6372,0,0.3629,0,0,0.5421,1,0.5421,1,0.5421,0,0.5421,0,0.9518,1,0.9518,0.6726,0,0.3275,0,0,0.4892,1,0.4892,0.9159,0,0.0841,0,0,0.1256,1,0.1256,0.6522,0.00010002,0.2515,0,0,0.5187,0.1674,1,1,1,1,0.1826,0.875,0,0.125,0,1,1,1,0.1826,0.875,0,0.125,0,0,0.793,0.1491,1,0.8346,1,1,0.7254,0.5524,0,0,0.6784,1,0.8373,0.1769,0,0,1,0.9054,1,0.6969,0,1,0.1786,0.875,0,0,1,1,1,0,1,1,1,0.125,0,0,0.1923]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_8.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 936;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.72742939062;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1062;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
