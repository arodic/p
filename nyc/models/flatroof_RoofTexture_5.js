// Converted from: ./flatroof_RoofTexture_5.obj
//  vertices: 417
//  faces: 157
//  normals: 0
//  colors: 0
//  uvs: 573
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,0,0,1,1,1,0,0.1159,1,0.3219,0,0,0,0,1,0.3219,0.165,0.1159,1,0.8677,1,0.6798,0.3328,0.6798,0.165,0.3219,0.165,0.6798,0.3328,1,1,1,0.3328,0.6798,0.3328,0.8677,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0.802,0.00010002,0.2398,0,0,1,1,0,0.2072,0,0,1,0.793,1,1,0,0.2072,0,0,1,0.793,1,1,0,0.2072,0,0,1,0.793,1,0.0005,1,1,1,0.999,0.0035,0,0,0.0005,1,1,1,0.9989,0,0,0,0.0005,1,1,1,0.9989,0,0,0,0.0005,1,1,1,0.9989,0,0,0,0.0005,1,1,1,0.9989,0,0,0,1,1,0,0.5332,0.1991,1,0.8621,0,0,1,1,1,1,0.2086,1,0.6774,0,1,0.9546,1,0,1,0.8938,0.3948,0.2469,0,0,1,1,1,0.9877,0,0.2332,0,0,1,1,1,0.9877,0,0.2332,0,0,1,1,1,0.9877,0,0.2332,0,0,1,1,1,0.9877,0,0.2332,0,0,1,1,1,0.9877,0,0.2332,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,0,0,0,0,1,1,1,1,0.0017,0.0022,0,0,1,0.9978,1,1,0,0.0019,0,0,1,0.9981,1,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0.9485,0.0363,1,0.1903,0.9939,0.1315,0.9761,0.0784,0.9485,0.0363,1,0.1903,0.9939,0.1315,0.9761,0.0784,0.9485,0.0363,1,0.1903,0.9939,0.1315,0.9761,0.0784,0.9485,0.0363,1,0.1903,0.9939,0.1315,0.9761,0.0784,0.952,0.035,1,0.1832,0.9941,0.1252,0.977,0.0729,0,0,0,1,1,1,1,0,0.9984,1,1,0.0022,0.014,0,0,1,0.9983,0,0.0004,0,0,1,1,1,0.9983,0,0.0004,0,0,1,1,1,0.9983,0,0.0004,0,0,1,1,1,0.9983,0,0.0004,0,0,1,1,1,0.9983,0,0.0004,0,0,1,1,1,0.9983,0,0.0004,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0.9983,1,1,0.00019997,0.0019,0,0,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0.6848,0,0,1,1,1,0.5931,0,0.0305,1,0.7435,1,1,0.7,0.5931,0,0.0305,1,0.7435,1,1,0.7,0.5931,0,0.0305,1,0.7435,1,1,0.7,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0.2521,0,0,0,0,1,1,1,0.2521,0,0,0,0,1,1,1,0.2521,0,0,0,0,1,1,1,0.2492,0,0,0,0,1,1,1,0.1758,0,0,0,0,1,1,1,1,0,0,0,0,1,0.8242,0,0.1758,0,1,1,0.8242,0,1,1,1,0,0.7508,0,0.2492,0,1,1,1,0,1,0,0.7479,0,0.2521,0,1,1,1,0,0.7479,0,1,1,1,1,0.7479,0,0.2521,0,1,0,0.7479,0,0.2521,0,1,1,0.5931,0,0,0.6938,0.0305,1,0.5931,0,0,0.6938,0.0305,1,0.5931,0,0,0.6938,0.0305,1,1,1,1,0.1832,0.952,0.035,0.9175,0.009,1,1,0.9175,0.009,0.8794,0,0,1,0,1,0.8794,0,0.1206,0,0,0.1832,0,0.1832,0.1206,0,0.0825,0.009,0.0059,0.1252,0.0059,0.1252,0.0825,0.009,0.048,0.035,0.023,0.0729,1,1,1,0.1903,0.9485,0.0363,0.9136,0.0093,1,1,0.9136,0.0093,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1903,0,0.1903,0.125,0,0.0864,0.0093,0.0061,0.1315,0.0061,0.1315,0.0864,0.0093,0.0515,0.0363,0.0239,0.0784,1,1,1,0.1903,0.9485,0.0363,0.9136,0.0093,1,1,0.9136,0.0093,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1903,0,0.1903,0.125,0,0.0864,0.0093,0.0061,0.1315,0.0061,0.1315,0.0864,0.0093,0.0515,0.0363,0.0239,0.0785,1,1,1,0.1903,0.9485,0.0363,0.9136,0.0093,1,1,0.9136,0.0093,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1903,0,0.1903,0.125,0,0.0864,0.0093,0.0061,0.1315,0.0061,0.1315,0.0864,0.0093,0.0515,0.0363,0.0239,0.0784,1,1,1,0.1903,0.9485,0.0363,0.9136,0.0093,1,1,0.9136,0.0093,0.875,0,0,1,0,1,0.875,0,0.125,0,0,0.1903,0,0.1903,0.125,0,0.0864,0.0093,0.0061,0.1315,0.0061,0.1315,0.0864,0.0093,0.0515,0.0363,0.0239,0.0784,0,1,1,1,0.9929,0.4539,0.8938,0.3948,0.1408,0,0,1,1,0.6774,0.4488,0,0.8621,0,0.138,0,0,0.2086,0,1,0.5735,0.00010002,0.1996,0,0,0.5332,1,1,0.3219,0.1633,0.3219,0,0,0,0.3219,0.1633,0,0,1,1,0.3219,0.1633,1,1,0.6798,0.3293,0.6798,0.3293,1,1,1,0.3293,0.3219,0.1633,0.6798,0.3293,0.6798,0.1633,0.3219,0.1633,0.3219,0,0,0,0.3219,0.1633,0,0,1,1,0.3219,0.1633,1,1,0.6798,0.3293,0.6798,0.3293,1,1,1,0.3293,0.3219,0.1633,0.6798,0.3293,0.6798,0.1633,0.3219,0.1633,0.3219,0,0,0,0.3219,0.1633,0,0,1,1,0.3219,0.1633,1,1,0.6798,0.3293,0.6798,0.3293,1,1,1,0.3293,0.3219,0.1633,0.6798,0.3293,0.6798,0.1633,0.3219,0.1633,0.3219,0,0,0,0.3219,0.1633,0,0,1,1,0.3219,0.1633,1,1,0.6798,0.3293,0.6798,0.3293,1,1,1,0.3293,0.3219,0.1633,0.6798,0.3293,0.6798,0.1633,0.3219,0.1633,0.3219,0,0,0,0.3219,0.1633,0,0,1,1,0.3219,0.1633,1,1,0.6798,0.3293,0.6798,0.3293,1,1,1,0.3293,0.3219,0.1633,0.6798,0.3293,0.6798,0.1633,0.3219,0.1633,0.3219,0,0,0,0.3219,0.1633,0,0,1,1,0.3219,0.1633,1,1,0.6798,0.3293,0.6798,0.3293,1,1,1,0.3293,0.3219,0.1633,0.6798,0.3293,0.6798,0.1633,0.3219,0.165,0.3219,0,0.1159,1,0.6781,0.8384,0.6781,1,1,1,0.6781,0.8384,1,1,0,0,0.6781,0.8384,0,0,0.3202,0.6741,0.3202,0.6741,0,0,0,0.6741,0.6781,0.8384,0.3202,0.6741,0.3202,0.8384]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_5.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1251;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.60534381836;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1460;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
