// Converted from: ./flatroof_RoofTexture_21.obj
//  vertices: 532
//  faces: 203
//  normals: 0
//  colors: 0
//  uvs: 796
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[1,1,0,0.6849,0.0668,1,0.7544,0,0.9754,1,1,0.0043,1,1,0.8022,0,0,0.3109,0.1323,1,0.8446,1,1,0.3983,0.2624,0,0,1,0.9908,0.6355,0.0251,1,1,1,0.0021,0,0,1,0.9983,1,1,0.0027,0.0002,1,1,1,0.9975,0,0,0,0.0002,1,1,1,0.9975,0,0,0,0.0003,1,1,1,0.7201,0,0,0.0078,0,1,1,1,1,0,0,0,1,1,0.125,0,0,0.1834,0,1,1,1,0.125,0,0,0.1834,0,1,0,1,1,1,1,0,0,0,0.0023,0.0016,1,0.0046,0.4752,0,0,1,0.9992,1,1,0,0.0024,0,0,1,0.9992,1,1,0,0.0024,0,0,1,0.9992,1,1,0,0.0024,0,0,1,0.9992,1,1,0,0.0024,0,0,1,0.9992,1,1,0,0.0024,0,0,0.0737,1,1,0.9823,0.6623,0.9401,0,0.0001,0,1,1,0.9614,0.198,0.9498,0,0,0.0667,1,1,0.9769,0.5995,0.9349,0,0.0001,0,1,1,0.9614,0.2209,0.948,0,0.0046,1,0.4575,0.0042,0,0.0053,0.996,0,0,0,0.0004,1,1,1,0.996,0,0,0,0.0004,1,1,1,0.996,0,0,0,0.0004,1,1,1,0.996,0,0,0,0.0004,1,1,1,0.9761,0.0515,1,0.875,1,0.125,0.9939,0.0864,0,1,0.949,1,1,0.6511,0.1468,0,0,1,1,0.265,0.7222,0,0.1174,0,0,1,1,0.265,0.7222,0,0.1174,0,0,1,1,0.265,0.7222,0,0.1174,0,1,0,0.0734,0.6196,0,1,0.807,1,1,0.357,0,0.357,0,1,1,1,0.848,1,0,0.7669,0.152,1,0,1,1,1,0.9998,0.1073,0.049,0,0,1,1,1,0.9998,0,0.0414,0,0,1,1,1,0.9998,0,0.0414,0,0,1,1,1,0.9998,0,0.0414,0,0,1,1,1,0.9998,0,0.0414,0,1,0.1314,0.0308,0,0,1,0.9747,1,0.9656,0,0,0,0.0329,1,1,1,0.9656,0,0,0,0.0329,1,1,1,1,1,0.0061,0.1189,0,0.1721,0,1,0.9485,0.0351,1,0.1839,0.9939,0.1271,0.9761,0.0758,0.9485,0.0351,1,0.1839,0.9939,0.1271,0.9761,0.0758,0.9485,0.0351,1,0.1839,0.9939,0.1271,0.9761,0.0758,0.9485,0.0351,1,0.1839,0.9939,0.1271,0.9761,0.0758,0.9485,0.0351,1,0.1839,0.9939,0.1271,0.9761,0.0758,0.8536,0.1813,0.8726,1,1,0.6192,0.0827,1,0.1464,0.2093,0,0.7148,0.5,0,0.8898,1,1,0.6527,0.8536,0.1912,0.9485,0.0331,1,0.1733,0.9939,0.1198,0.9761,0.0715,1,1,0.0061,0.1268,0,0.1835,0,1,1,1,0.0061,0.1268,0,0.1835,0,1,0.9485,0.035,1,0.1835,0.9939,0.1268,0.9761,0.0756,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0.0061,0.1158,0,0.1676,0,1,0.9761,0.0785,1,1,1,0.1905,0.9939,0.1316,0.9761,0.0785,1,1,1,0.1905,0.9939,0.1316,0.9761,0.0785,1,1,1,0.1905,0.9939,0.1316,0.9761,0.0785,1,1,1,0.1905,0.9939,0.1316,0.9761,0.0785,1,1,1,0.1905,0.9939,0.1316,0.017,0.5172,0.1464,0.2044,0.067,0.3489,0.983,0.5639,0.983,0.9578,1,0.7608,0.017,0.9578,0.0285,1,0.017,0.5639,0,0.7608,0.017,0.5639,0.0285,1,0.9715,1,0.067,0.3804,0.067,0.3804,0.9715,1,0.25,0.1019,0.1464,0.2228,0.25,0.1019,0.9715,1,0.5,0,0.3706,0.0259,0.5,0,0.9715,1,0.75,0.1019,0.6294,0.0259,0.75,0.1019,0.9715,1,0.933,0.3804,0.8536,0.2228,0.933,0.3804,0.9715,1,0.983,0.9578,0.983,0.5639,0.983,0.5172,0.933,0.3489,0.8536,0.2044,1,0.6978,1,0.6978,0.8536,0.2044,0.75,0.0935,0.983,0.8784,0.983,0.8784,0.75,0.0935,0.6294,0.0238,0.9469,1,0.9469,1,0.6294,0.0238,0.5,0,0.0531,1,0.0531,1,0.5,0,0.3706,0.0238,0.017,0.8784,0.017,0.8784,0.3706,0.0238,0.25,0.0935,0,0.6978,0,0.6978,0.25,0.0935,0.1464,0.2044,0.017,0.5172,0,1,1,1,0.125,0,0.0864,0.0093,0,1,0.0864,0.0093,0.0515,0.0364,0,0.1905,0,0.1905,0.0515,0.0364,0.0239,0.0785,0.0061,0.1316,0.125,0,1,1,0.9136,0.0093,0.875,0,0.9136,0.0093,1,1,0.9761,0.0785,0.9485,0.0364,0.875,0,0.125,0,1,1,0.9136,0.0093,1,1,0.125,0,0.0864,0.0093,0,1,0,1,0.0864,0.0093,0.0515,0.0364,0,0.1905,0,0.1905,0.0515,0.0364,0.0239,0.0785,0.0061,0.1316,0.9136,0.0093,1,1,0.9761,0.0785,0.9485,0.0364,0.875,0,0.125,0,1,1,0.9136,0.0093,1,1,0.125,0,0.0864,0.0093,0,1,0,1,0.0864,0.0093,0.0515,0.0364,0,0.1905,0,0.1905,0.0515,0.0364,0.0239,0.0785,0.0061,0.1316,0.9136,0.0093,1,1,0.9761,0.0785,0.9485,0.0364,0.875,0,0.125,0,1,1,0.9136,0.0093,1,1,0.125,0,0.0864,0.0093,0,1,0,1,0.0864,0.0093,0.0515,0.0364,0,0.1905,0,0.1905,0.0515,0.0364,0.0239,0.0785,0.0061,0.1316,0.9136,0.0093,1,1,0.9761,0.0785,0.9485,0.0364,0.875,0,0.125,0,1,1,0.9136,0.0093,1,1,0.125,0,0.0864,0.0093,0,1,0,1,0.0864,0.0093,0.0515,0.0364,0,0.1905,0,0.1905,0.0515,0.0364,0.0239,0.0785,0.0061,0.1316,0.9136,0.0093,1,1,0.9761,0.0785,0.9485,0.0364,0.875,0,0.125,0,1,1,0.9136,0.0082,0.9136,0.0082,1,1,1,0.1676,0.9485,0.032,0.9485,0.032,1,0.1676,0.9939,0.1158,0.9761,0.0691,1,1,0.125,0,0.0864,0.0082,0.0515,0.032,1,1,0.0515,0.032,0.0239,0.0691,0.0061,0.1158,0,1,1,1,0.0061,0.1268,0,0.1835,0.0061,0.1268,1,1,0.0515,0.035,0.0239,0.0756,0.0515,0.035,1,1,0.125,0,0.0864,0.009,0.125,0,1,1,0.9136,0.009,0.875,0,0.9136,0.009,1,1,1,0.1835,0.9485,0.035,0.875,0,0.125,0,1,1,0.9136,0.009,0.9136,0.009,1,1,1,0.1835,0.9485,0.035,0.9485,0.035,1,0.1835,0.9939,0.1268,0.9761,0.0756,1,1,0.125,0,0.0864,0.009,0.0515,0.035,1,1,0.0515,0.035,0.0239,0.0756,0.0061,0.1268,0.875,0,0.125,0,1,1,0.9136,0.009,0.9136,0.009,1,1,1,0.1835,0.9485,0.035,0.9485,0.035,1,0.1835,0.9939,0.1268,0.9761,0.0756,1,1,0.125,0,0.0864,0.009,0.0515,0.035,1,1,0.0515,0.035,0.0239,0.0756,0.0061,0.1268,0.875,0,0.125,0,0,0.1733,0,1,0,0.1733,0.125,0,0.0864,0.0085,0.0061,0.1198,0.0061,0.1198,0.0864,0.0085,0.0515,0.0331,0.0239,0.0715,0.875,0,0,1,1,1,0.9136,0.0085,0.9136,0.0085,1,1,1,0.1733,0.9485,0.0331,0.1102,1,0.8898,1,0.5,0,0.1464,0.1912,0.1102,1,0.1464,0.1912,0,0.6527,0.9173,1,1,0.7148,0.8536,0.2093,0.5,0,0.9173,1,0.5,0,0.1464,0.2093,0.0827,1,0.5,0,0.1464,0.1813,0,0.6192,0.1274,1,0.5,0,0.1274,1,0.8726,1,0.8536,0.1813,0,1,1,1,0.9136,0.009,0.875,0,0,1,0.875,0,0.125,0,0,0.1839,0,0.1839,0.125,0,0.0864,0.009,0.0061,0.1271,0.0061,0.1271,0.0864,0.009,0.0515,0.0351,0.0239,0.0758,0.9136,0.009,1,1,1,0.1839,0.9485,0.0351,0.875,0,0.125,0,0,0.1839,0,1,0,0.1839,0.125,0,0.0864,0.009,0.0061,0.1271,0.0061,0.1271,0.0864,0.009,0.0515,0.0351,0.0239,0.0758,0.875,0,0,1,1,1,0.9136,0.009,0.9136,0.009,1,1,1,0.1839,0.9485,0.0351,0.875,0,0.125,0,0,0.1839,0,1,0,0.1839,0.125,0,0.0864,0.009,0.0061,0.1271,0.0061,0.1271,0.0864,0.009,0.0515,0.0351,0.0239,0.0758,0.875,0,0,1,1,1,0.9136,0.009,0.9136,0.009,1,1,1,0.1839,0.9485,0.0351,0.875,0,0.125,0,0,0.1839,0,1,0,0.1839,0.125,0,0.0864,0.009,0.0061,0.1271,0.0061,0.1271,0.0864,0.009,0.0515,0.0351,0.0239,0.0758,0.875,0,0,1,1,1,0.9136,0.009,0.9136,0.009,1,1,1,0.1839,0.9485,0.0351,0.875,0,0.125,0,0,0.1839,0,1,0,0.1839,0.125,0,0.0864,0.009,0.0061,0.1271,0.0061,0.1271,0.0864,0.009,0.0515,0.0351,0.0239,0.0758,0.875,0,0,1,1,1,0.9136,0.009,0.9136,0.009,1,1,1,0.1839,0.9485,0.0351,0.875,0,0.125,0,1,1,0.9136,0.0084,0.9136,0.0084,1,1,1,0.1721,0.9485,0.0329,0.9485,0.0329,1,0.1721,0.9939,0.1189,0.9761,0.0709,1,1,0.125,0,0.0864,0.0084,0.0515,0.0329,1,1,0.0515,0.0329,0.0239,0.0709,0.0061,0.1189,1,0.7669,0.5,0,0,0.7669,0.848,1,0.7672,0,0.2328,0,0,0.357,1,0.357,1,0,0.693,0,0.0734,0.6196,0,1,0.914,1,1,0.265,0,1,0.914,1,1,0.265,0,1,0.914,1,1,0.265,0.125,1,0.875,1,0.9136,0.9939,0.125,0,0.125,1,0.125,0,0.0864,0.0061,0.0864,0.9939,0.0864,0.9939,0.0864,0.0061,0.0515,0.0239,0.0515,0.9761,0.0515,0.9761,0.0515,0.0239,0.0239,0.0515,0.0239,0.9485,0.0239,0.9485,0.0239,0.0515,0.0061,0.0864,0.0061,0.9136,0.0061,0.9136,0.0061,0.0864,0,0.125,0,0.875,0.125,0,0.9136,0.9939,0.9485,0.9761,0.875,0,0.875,0,0.9485,0.9761,0.9761,0.9485,0.9136,0.0061,0.9136,0.0061,0.9761,0.9485,0.9939,0.9136,0.9485,0.0239,0.9485,0.0239,0.9939,0.9136,1,0.875,0.9761,0.0515,0.0046,1,1,1,0.9996,0,0.7428,0.00019997,0.0046,1,0.7428,0.00019997,0.4575,0.0042,0,1,1,1,0.0027,0.3116,0.0003,0.3117,0.0027,0.3116,1,1,0.0001,0,0.0003,0.2574,0.0003,1,1,1,0.003,0.6788,0.0005,0.679,0.003,0.6788,1,1,0,0.0667,0.0005,0.6314,0,1,1,1,0.0027,0.2913,0.0003,0.2915,0.0027,0.2913,1,1,0.0001,0,0.0003,0.2356,0.0004,1,1,1,0.003,0.75,0.0005,0.7501,0.003,0.75,1,1,0,0.0737,0.0005,0.6976,0,1,0.9992,1,1,0.0046,0.0023,0.0016,1,1,1,0.1834,0.875,0,0.125,0,1,1,1,0.1834,0.875,0,0.125,0,0,0,0.0251,1,0.9908,0.6355,0.2977,0,0,1,0.9754,1,0.7544,0,0.0068,0.6,0.7881,0,0.4396,0,0,0.6849,1,1]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_21.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1596;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.8545713418;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1998;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
