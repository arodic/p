// Converted from: ./flatroof_RoofTexture_3.obj
//  vertices: 434
//  faces: 172
//  normals: 0
//  colors: 0
//  uvs: 652
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0.4781,0,0,0.9976,0.2461,1,1,1,0.0058,1,0.3402,0,0,0,0.0036,0,0.9999,0.7212,0.9953,0.0086,0.0003,1,1,1,0.9914,0,0,0,0.0003,1,1,1,0.9914,0,0,0,0.0003,1,1,1,0.9914,0,0,0,0.8649,0,0,0.7602,0.0299,1,1,1,0.1424,0,1,0.2844,0.7085,0,0.1424,0,1,0.2844,0.7085,0,0.1424,0,1,0.2844,0.7085,0,0.1424,0,1,0.2844,0.7085,0,1,1,1,0,0,0,0,1,0,0.1796,0.0515,0.0343,0.0239,0.074,0.0061,0.1241,0.9829,0.874,0.9293,0.9853,0.9573,0.9575,0.9758,0.9191,0,0.1796,0.0515,0.0343,0.0239,0.074,0.0061,0.1241,0,0.1761,0.0498,0.0336,0.0235,0.0714,0.006,0.1211,0,0.1684,0.0458,0.0322,0.0225,0.0654,0.0058,0.1142,0,0.1512,0.0368,0.0289,0.0204,0.0522,0.0052,0.0992,1,1,1,0,0,0,0,1,0.0004,1,1,1,0.9992,0.0215,0,0,0.0004,1,1,1,0.9991,0,0,0,1,0.1796,0,0.1796,0,1,1,1,0.0239,0.0764,0.125,0,0.0864,0.0091,0.0515,0.0354,0.0239,0.0764,0.125,0,0.0864,0.0091,0.0515,0.0354,0.0239,0.0764,0.125,0,0.0864,0.0091,0.0515,0.0354,0.0239,0.0764,0.125,0,0.0864,0.0091,0.0515,0.0354,0.0239,0.0764,0.125,0,0.0864,0.0091,0.0515,0.0354,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,1,1,1,0.9981,0.4792,0.2138,0,0.0983,0.5195,0.9965,0.0164,0.9706,0,0.2054,0,0.0983,0.5195,0.9965,0.0164,0.9706,0,0.2054,0,0.0983,0.5195,0.9965,0.0164,0.9706,0,0.2054,0,0.0983,0.5195,0.9965,0.0164,0.9706,0,0.2054,0,0.0983,0.5195,0.9965,0.0164,0.9706,0,0.2054,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0.2772,0,0,0,0,1,0.2772,0,0,1,1,1,0.6836,0,1,1,1,0,0.6836,0,0.1205,1,0,0,0,1,0.3219,0.1681,0.1205,1,0.8625,1,0.6798,0.3391,0.6798,0.1681,0.3219,0.1681,0.6798,0.3391,1,1,1,0.3391,0.6798,0.3391,0.8625,1,1,1,0,0.6999,0.1592,1,0.8778,0,0.5577,1,0.9329,0.7778,1,0.689,1,0,0,0.8571,0.2042,1,1,1,0.9139,0,0.7554,1,1,0.6001,0.268,0,0,0,0,1,0.268,0,0,1,1,1,0.6941,0,1,1,1,0,0.6941,0,1,1,0,0,0,1,1,1,0,0,0,1,0.1227,1,0.3219,0,0,0,0,1,0.3219,0.1696,0.1227,1,0.86,1,0.6798,0.3422,0.6798,0.1696,0.3219,0.1696,0.6798,0.3422,1,1,1,0.3422,0.6798,0.3422,0.86,1,0.9979,0,0,0.0063,0.0005,1,1,1,1,1,0.2976,0,0.0002,0.00040001,0,1,1,1,0.2976,0,0.0002,0.00040001,0,1,1,1,0.2976,0,0.0002,0.00040001,0,1,1,1,0.2976,0,0.0002,0.00040001,0,1,1,1,0.2976,0,0.0002,0.00040001,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0.7071,0,0.7607,0.34,1,0.7858,1,0.9336,1,0.1464,0.2218,0,0.7573,0.0664,1,0.8536,0.2052,0.9115,1,1,0.7006,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0.0885,1,0.9115,1,0.1464,0.2052,0,0.7006,0.1464,0.2052,0.9115,1,0.8536,0.2052,0.5,0,0.9336,1,1,0.7573,0.8536,0.2218,0.9336,1,0.8536,0.2218,0.5,0,0.1464,0.2218,1,0.7071,0.8572,0.2929,0.0768,0,0,0.7607,0.0768,0,0.8572,0.2929,0.441,0,0.9985,0,0.2976,0,1,1,0.9985,0,0.2976,0,1,1,0.9985,0,0.2976,0,1,1,0.9985,0,0.2976,0,1,1,0.9985,0,0.2976,0,1,1,0.3219,0.1696,0.3219,0,0.1227,1,0.3219,0.1696,0.3219,0,0,0,0.3219,0.1696,0,0,1,1,0.3219,0.1696,1,1,0.6798,0.3422,0.6798,0.3422,1,1,1,0.3422,0.3219,0.1696,0.6798,0.3422,0.6798,0.1697,0.3219,0.1696,0.3219,0,0,0,0.3219,0.1696,0,0,1,1,0.3219,0.1696,1,1,0.6798,0.3422,0.6798,0.3422,1,1,1,0.3422,0.3219,0.1696,0.6798,0.3422,0.6798,0.1697,0.6118,0,0,1,0.7554,1,0.9139,0,0,0.1429,0,0.8571,1,0,0.2042,0,0,0.7778,0.0394,1,0.795,0,0.4198,0.2222,0.795,0,0.0394,1,0.5577,1,0.8778,0,0.4697,0.00010002,0.2174,0,0,0.6999,1,1,0.3219,0.1681,0.3219,0,0,0,0.1205,1,0,1,1,1,0.9965,0.0164,0.0983,0.5195,0,1,1,1,0.9965,0.0164,0.0983,0.5195,0,1,1,1,0.9965,0.0164,0.0983,0.5195,0,1,1,1,0.9965,0.0164,0.0983,0.5195,0,1,1,1,0.9965,0.0164,0.0983,0.5195,0,1,1,1,1,0.1854,0.9939,0.1281,0,1,0.9939,0.1281,0.9761,0.0764,0.9485,0.0354,0,1,0.9485,0.0354,0.9136,0.0091,0,0.1854,0,0.1854,0.9136,0.0091,0.875,0,0.0061,0.1281,0.0061,0.1281,0.875,0,0.125,0,0.0239,0.0764,0.875,0,0.125,0,0.0239,0.0764,0.0061,0.1281,0.875,0,0.0061,0.1281,0,0.1854,0.9136,0.0091,0.9136,0.0091,0,0.1854,0,1,0.9485,0.0354,0.9485,0.0354,0,1,0.9939,0.1281,0.9761,0.0764,0.9939,0.1281,0,1,1,1,1,0.1854,0.875,0,0.125,0,0.0239,0.0764,0.0061,0.1281,0.875,0,0.0061,0.1281,0,0.1854,0.9136,0.0091,0.9136,0.0091,0,0.1854,0,1,0.9485,0.0354,0.9485,0.0354,0,1,0.9939,0.1281,0.9761,0.0764,0.9939,0.1281,0,1,1,1,1,0.1854,0.875,0,0.125,0,0.0239,0.0764,0.0061,0.1281,0.875,0,0.0061,0.1281,0,0.1854,0.9136,0.0091,0.9136,0.0091,0,0.1854,0,1,0.9485,0.0354,0.9485,0.0354,0,1,0.9939,0.1281,0.9761,0.0764,0.9939,0.1281,0,1,1,1,1,0.1854,0.875,0,0.125,0,0.0239,0.0764,0.0061,0.1281,0.875,0,0.0061,0.1281,0,0.1854,0.9136,0.0091,0.9136,0.0091,0,0.1854,0,1,0.9485,0.0354,0.9485,0.0354,0,1,0.9939,0.1281,0.9761,0.0764,0.9939,0.1281,0,1,1,1,1,0.1854,0.875,0,0.125,0,0.0864,0.0088,0.9136,0.0088,0.9136,0.0088,0.0864,0.0088,0.0515,0.0343,0.9485,0.0343,0.9485,0.0343,0.0515,0.0343,0.0239,0.074,0.9761,0.074,0.9761,0.074,0.0239,0.074,0.0061,0.1241,0.9939,0.1241,0.9939,0.1241,0.0061,0.1241,0,0.1796,1,0.1796,1,1,1,0.1512,0.9948,0.0992,0.9796,0.0522,1,1,0.9796,0.0522,0.9632,0.0289,0.93,0.0074,1,1,0.93,0.0074,0.8933,0,0.1067,0,1,1,0.1067,0,0.07,0.0074,0,1,0,1,0.07,0.0074,0.0368,0.0289,0,0.1512,1,1,1,0.1684,0.9942,0.1142,0.9775,0.0654,1,1,0.9775,0.0654,0.9542,0.0322,0.9201,0.0082,1,1,0.9201,0.0082,0.8822,0,0.1178,0,1,1,0.1178,0,0.0799,0.0082,0,1,0,1,0.0799,0.0082,0.0458,0.0322,0,0.1684,1,1,1,0.1761,0.994,0.1211,0.9765,0.0714,1,1,0.9765,0.0714,0.9502,0.0336,0.9156,0.0086,1,1,0.9156,0.0086,0.8772,0,0.1228,0,1,1,0.1228,0,0.0844,0.0086,0,1,0,1,0.0844,0.0086,0.0498,0.0336,0,0.1761,1,1,1,0.1796,0.9939,0.1241,0.9761,0.074,1,1,0.9761,0.074,0.9485,0.0343,0.9136,0.0088,1,1,0.9136,0.0088,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0088,0,1,0,1,0.0864,0.0088,0.0515,0.0343,0,0.1796,0.0171,0,0,0.6842,0.0049,0.7316,0.0213,0.7768,0.0171,0,0.0213,0.7768,0.0476,0.8151,0.0813,0.843,0.0171,0,0.0813,0.843,0.1191,0.8577,0.8563,1,0.0171,0,0.8563,1,0.8945,1,1,0.1898,1,0.1898,0.8945,1,0.9293,0.9853,0.9829,0.874,1,1,1,0.1796,0.9939,0.1241,0.9761,0.074,1,1,0.9761,0.074,0.9485,0.0343,0.9136,0.0088,1,1,0.9136,0.0088,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0088,0,1,0,1,0.0864,0.0088,0.0515,0.0343,0,0.1796,0,1,0.8913,1,1,0.2844,0.1424,0,0,1,0.8913,1,1,0.2844,0.1424,0,0,1,0.8913,1,1,0.2844,0.1424,0,0,1,0.8913,1,1,0.2844,0.1424,0,0.0036,0,0,1,1,1,0.9999,0.7212,0.0058,1,1,1,0.581,0.3627,0.3402,0]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_3.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1302;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.61960983203;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1648;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
