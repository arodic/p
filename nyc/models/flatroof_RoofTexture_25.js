// Converted from: ./flatroof_RoofTexture_25.obj
//  vertices: 247
//  faces: 94
//  normals: 0
//  colors: 0
//  uvs: 347
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0,1,1,1,0.9789,0,0.0029,0.0098,0.5035,0.0032,0.0216,1,0.997,1,1,0,0.5035,0.0032,0.0216,1,0.997,1,1,0,0.5035,0.0032,0.0216,1,0.997,1,1,0,0.5035,0.0032,0.0216,1,0.997,1,1,0,0.5035,0.0032,0.0216,1,0.997,1,1,0,0.7454,1,0.5614,0,0.1498,0.4115,0,1,1,1,0.2718,0,0,0.399,0,1,1,1,0.0217,0,0,0.0319,0,1,0.0943,1,0.4131,0,0,0.6064,0,0.8616,1,1,0.2609,0,0,0.383,0,1,1,1,0.1468,0,0,0.2155,0,1,0.8187,1,0.5,0,0,0.734,0.1813,1,0.9748,0.0954,0.9718,0,0,0.0954,0.9748,0.0954,0,0.0954,0.0282,1,0.9852,0.4286,0.0282,1,1,0.9046,0.9852,0.4286,1,0,0,1,1,1,1,0,0,1,1,1,1,0.9544,0,0.8785,0,1,1,1,0.1683,0.8785,1,0.9544,1,0.2275,0.3427,0.5269,0.1683,0.5269,0.1683,0.8785,0.3427,0.5269,1,0,0.3427,0,0.3427,0.5269,1,0.2275,0.9986,0,0,0.0022,0.0004,1,1,1,0.9989,0,0,0,0,1,1,1,0.9989,0,0,0,0,1,1,1,0.9989,0,0,0,0,1,1,1,0.9989,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0.9521,1,0.9521,1,0.0455,0,0.0455,0,0,0,0.0455,1,0.0455,1,0,0,0.9521,0,1,1,1,1,0.9521,0,1,0.8702,1,1,0.5535,0.2902,0,0,1,1,0.04,0.9558,0,0.2505,0,0,1,1,0.04,0.9558,0,0.2505,0,0,1,1,0.04,0.9558,0,0.2505,0,0,1,1,0.04,0.9558,0,0.2505,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0.2364,1,1,1,0.7635,0.00010002,0.0966,1,0,0.634,0.017,0.7981,0.067,0.9511,0.933,0.3651,0.983,0.9191,1,0.7302,0.983,0.5412,0,0,0.4117,1,1,1,0.5883,0,0.017,0.9191,0.04,1,0.75,0.0978,0.6294,0.0249,0.017,0.9191,0.6294,0.0249,0.5,0,0,0.7302,0,0.7302,0.5,0,0.3706,0.0249,0.017,0.5412,0.017,0.5412,0.3706,0.0249,0.25,0.0978,0.067,0.3651,0.067,0.3651,0.25,0.0978,0.1464,0.2139,0.75,0.0978,0.04,1,0.96,1,0.8536,0.2139,0.8536,0.2139,0.96,1,0.983,0.9191,0.933,0.3651,0.983,0.4699,0.933,0.317,1,0.634,1,0.634,0.933,0.317,0.8536,0.1857,0.983,0.7981,0.983,0.7981,0.8536,0.1857,0.75,0.0849,0.933,0.9511,0.933,0.9511,0.75,0.0849,0.6294,0.0216,0.9034,1,0.9034,1,0.6294,0.0216,0.5,0,0.3706,0.0216,0.9034,1,0.3706,0.0216,0.25,0.0849,0.1464,0.1857,0.9034,1,0.1464,0.1857,0.067,0.317,0.017,0.4699,0.9034,1,0.017,0.4699,0,0.634,0.0966,1,0,1,0.7591,1,1,0.04,0,1,0.7591,1,1,0.04,0,1,0.7591,1,1,0.04,0,1,0.7591,1,1,0.04,0.1683,0.8785,0,0.8785,1,0.9544,0.1683,0.6827,0,0.6827,0,1,0.1683,0.6827,0,1,1,0,0.1683,0.6827,1,0,0.3427,0.3311,0.3427,0.3311,1,0,0.3427,0,0.1683,0.6827,0.3427,0.3311,0.1683,0.3311,0.1683,0.6174,0,0.6174,0,1,0.1683,0.6174,0,1,1,0,0.1683,0.6174,1,0,0.3427,0.2658,0.3427,0.2658,1,0,0.3427,0,0.1683,0.6174,0.3427,0.2658,0.1684,0.2658,1,0.734,0.5,0,0.8187,1,0.8533,0,0.1468,0,1,1,1,0.2155,0.7391,0,0.2609,0,1,1,1,0.383,0.587,0,0.4131,0,0.0943,1,0.9057,1,0.587,0,0.9057,1,1,0.8616,1,0.6064,0.9783,0,0.0217,0,1,1,1,0.0319,0.7283,0,0.2718,0,1,1,1,0.399,1,0.00010002,0.5614,0,0.7454,1,0.5035,0.0032,0,0.0032,0.0216,1,0.5035,0.0032,0,0.0032,0.0216,1,0.5035,0.0032,0,0.0032,0.0216,1,0.5035,0.0032,0,0.0032,0.0216,1,0.5035,0.0032,0,0.0032,0.0216,1]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_25.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 741;
  var numMorphTargets = model.morphTargets.length;
  var scale = 2.09699535156;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 882;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
