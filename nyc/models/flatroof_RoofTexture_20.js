// Converted from: ./flatroof_RoofTexture_20.obj
//  vertices: 382
//  faces: 134
//  normals: 0
//  colors: 0
//  uvs: 520
//  materials: 0
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "default"
	}],

    "vertices": [],
    
    "morphTargets": [],

    "morphColors": [],

    "normals": [],

    "colors": [],

    "uvs": [[0,1,1,1,1,0,0,0,1,1,0.0061,0.1284,0,0.1858,0,1,1,1,0.0061,0.1284,0,0.1858,0,1,1,1,0.0061,0.1284,0,0.1858,0,1,1,1,1,0,0,0,0,1,0.5534,0,0,1,0.9591,1,1,0.5712,0.4906,0,0.1536,1,0.839,1,1,0.7418,0.2143,0,0,1,0.8628,1,1,0.34,0.4778,0,0.1517,1,0.8324,1,1,0.7228,1,0.0017,0.0012,0,0,1,0.9997,1,0.9998,0,0.0006,0,0,1,1,1,0.9998,0,0.0006,0,0,1,1,1,0.9998,0,0.0006,0,0,1,1,1,1,0.9582,1,0.0388,0,0.0388,0,0.9582,0,0.9582,0,1,1,1,1,0.9582,0,0,0,0.0388,1,0.0388,1,0,0,1,0.9227,1,1,0.5908,0.1874,0,0.667,0,1,1,0.9875,0.6559,0.1557,0,1,0.2332,0.7335,0,0.1557,0,1,0.2332,0.7335,0,0.1557,0,1,0.2332,0.7335,0,0.1557,0,1,0.2332,0.7335,0,0.0002,0.0015,0,1,1,1,0.9886,0,0.9982,0,0,0,0.0005,1,1,1,0.999,1,1,0.0013,0.001,0,0,1,1,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,0,1,1,1,0.9993,0.0076,0.0041,0,0,1,1,1,0.9993,0,0.004,0,0,1,1,1,0.9993,0,0.004,0,0,1,1,1,0.9993,0,0.004,0,0,1,1,1,0.9993,0,0.004,0,0,1,1,1,0.9993,0,0.004,0,0,1,1,1,0.9993,0,0.004,0,0.9956,0,0,0.0013,0.0044,1,1,1,0.0026,0,0,1,0.9974,1,1,0,0,1,1,1,0.5906,0.3514,0.367,0,0,1,1,1,0.5689,0,0.2507,0,0,1,1,1,1,0,0,0,1,1,0.2521,0,0,0,0,1,1,1,0.2521,0,0,0,0,1,1,1,0.2521,0,0,0,0,1,1,1,0.222,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0.1485,0.807,0,0.4342,0.0028,0.5658,0.0534,0.693,0.3706,0.0254,0.6294,0.0254,0.5,0,0.3706,0.0254,0.6294,0.0254,0.5,0,0.3706,0.0254,0.6294,0.0254,0.5,0,0.3706,0.0254,0.6294,0.0254,0.5,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,0.8589,0,1,1,0.9985,0.1376,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,0.435,0.5375,0.2249,0.4015,0,1,0.2249,0.4015,0,0.3917,0.435,0.5375,1,1,0.8589,0,0.547,0.3718,0.547,0.3718,0.8589,0,0.0003,0.0018,0.2901,0.2053,0.2901,0.2053,0.0003,0.0018,0.0002,0.1927,0.017,0.9382,0.0342,1,0.9658,1,0.983,0.9382,0.017,0.9382,0.983,0.9382,1,0.7453,0,0.7453,0,0.7453,1,0.7453,0.983,0.5524,0.017,0.5524,0.017,0.5524,0.983,0.5524,0.933,0.3726,0.067,0.3726,0.067,0.3726,0.933,0.3726,0.8536,0.2183,0.1464,0.2183,0.1464,0.2183,0.8536,0.2183,0.75,0.0998,0.25,0.0998,0.25,0.0998,0.75,0.0998,0.6294,0.0254,0.3706,0.0254,0.017,0.9382,0.0342,1,0.9658,1,0.983,0.9382,0.017,0.9382,0.983,0.9382,1,0.7453,0,0.7453,0,0.7453,1,0.7453,0.983,0.5524,0.017,0.5524,0.017,0.5524,0.983,0.5524,0.933,0.3726,0.067,0.3726,0.067,0.3726,0.933,0.3726,0.8536,0.2183,0.1464,0.2183,0.1464,0.2183,0.8536,0.2183,0.75,0.0998,0.25,0.0998,0.25,0.0998,0.75,0.0998,0.6294,0.0254,0.3706,0.0254,0.017,0.9382,0.0342,1,0.9658,1,0.983,0.9382,0.017,0.9382,0.983,0.9382,1,0.7453,0,0.7453,0,0.7453,1,0.7453,0.983,0.5524,0.017,0.5524,0.017,0.5524,0.983,0.5524,0.933,0.3726,0.067,0.3726,0.067,0.3726,0.933,0.3726,0.8536,0.2183,0.1464,0.2183,0.1464,0.2183,0.8536,0.2183,0.75,0.0998,0.25,0.0998,0.25,0.0998,0.75,0.0998,0.6294,0.0254,0.3706,0.0254,0.017,0.9382,0.0342,1,0.9658,1,0.983,0.9382,0.017,0.9382,0.983,0.9382,1,0.7453,0,0.7453,0,0.7453,1,0.7453,0.983,0.5524,0.017,0.5524,0.017,0.5524,0.983,0.5524,0.933,0.3726,0.067,0.3726,0.067,0.3726,0.933,0.3726,0.8536,0.2183,0.1464,0.2183,0.1464,0.2183,0.8536,0.2183,0.75,0.0998,0.25,0.0998,0.25,0.0998,0.75,0.0998,0.6294,0.0254,0.3706,0.0254,0.602,0,0.4237,0.0341,0.8085,1,0.8448,0.9931,0.602,0,0.8448,0.9931,1,0.0475,0.7873,0,0.7873,0,1,0.0475,0.9671,0.0341,0.8085,1,0.4237,0.0341,0.2646,0.0999,0.6232,1,0.6232,1,0.2646,0.0999,0.1355,0.193,0.4434,0.9659,0.4434,0.9659,0.1355,0.193,0.0453,0.307,0.2815,0.9001,0.2815,0.9001,0.0453,0.307,0,0.4342,0.1485,0.807,0.778,0,0.222,0,1,1,1,0,1,0,0.7479,0,0.2521,0,1,1,1,0,0.7479,0,0.2521,0,1,1,1,0,0.7479,0,0.2521,0,1,1,0,1,0.8797,1,1,0.2332,0.1557,0,0,1,0.8797,1,1,0.2332,0.1557,0,0,1,0.8797,1,1,0.2332,0.1557,0,0,1,0.8797,1,1,0.2332,0.1557,0,0,0.0014,0.4881,1,1,1,0.667,0,0,0.7901,0.1517,1,0.4778,0,0.4906,0,0,0.7704,0.1536,1,0.0955,0,0,1,0.5534,0,1,1,1,0.1858,0.9485,0.0355,0.9136,0.0091,0.9485,0.0355,1,0.1858,0.9939,0.1284,0.9761,0.0766,1,1,0.9136,0.0091,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0091,0.0515,0.0355,1,1,0.0515,0.0355,0.0239,0.0766,0.0061,0.1284,1,1,1,0.1858,0.9485,0.0355,0.9136,0.0091,0.9485,0.0355,1,0.1858,0.9939,0.1284,0.9761,0.0766,1,1,0.9136,0.0091,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0091,0.0515,0.0355,1,1,0.0515,0.0355,0.0239,0.0766,0.0061,0.1284,1,1,1,0.1858,0.9485,0.0355,0.9136,0.0091,0.9485,0.0355,1,0.1858,0.9939,0.1284,0.9761,0.0766,1,1,0.9136,0.0091,0.875,0,0.125,0,1,1,0.125,0,0.0864,0.0091,0.0515,0.0355,1,1,0.0515,0.0355,0.0239,0.0766,0.0061,0.1284]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "flatroof_RoofTexture_20.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 1146;
  var numMorphTargets = model.morphTargets.length;
  var scale = 1.49787521289;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 1308;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
